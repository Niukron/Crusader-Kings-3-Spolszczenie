types CourtPositionTypes
{
	type vbox_court_positions = vbox {
		margin_bottom = 15

		state = {
			name = _show
			using = Expand_Court_Positions
		}

		hbox = {
			datamodel = "[GetAllCourtPositionCategories]"
			visible = "[CourtPositionsWindow.CanShowCategoryTabs]"

			spacing = 5
			margin = { 10 5 }

			button_position_category = {
				onclick = "[CourtPositionsWindow.ClearCategoryFilter]"
				down ="[Not(CourtPositionsWindow.HasCategoryFilter)]"
				# ZMIANA
				#size = { 110 33 }
				size = { 120 33 }

				hbox = {
					text_single = {
						layoutpolicy_horizontal = expanding
						align = center|nobaseline
						text = COURT_POSITIONS_WINDOW_FILTER_ALL
						default_format = "#low"
						# ZMIANA
						#margin_right = 30
						#max_width = 70
						margin_right = 35
						max_width = 90
					}
				}

				blockoverride "hire_available_text" {
					text = COURT_POSITIONS_WINDOW_FILTER_TAB_ALL_NUM_HIRES
					alpha = 0.6
				}
			}

			item = {
				button_position_category = {
					visible = "[CourtPositionsWindow.CanShowCategoryTab(CourtPositionCategory.Self)]"
					onclick = "[CourtPositionsWindow.SetCategoryFilter(CourtPositionCategory.Self)]"
					down = "[CourtPositionsWindow.IsCategoryFiltering(CourtPositionCategory.Self)]"
					# ZMIANA
					#size = { 138 33 }
					size = { 130 33 }

					hbox = {
						text_single = {
							layoutpolicy_horizontal = expanding
							align = center|nobaseline
							text = "[CourtPositionCategory.GetName]"
							default_format = "#low"
							margin_right = 30
							max_width = 110
						}
					}

					blockoverride "hire_available_text" {
						text = COURT_POSITIONS_WINDOW_FILTER_TAB_CATEGORY_NUM_HIRES
						alpha = 0.6
					}
				}
			}
		}

		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			background = {
				texture = "gfx/interface/skinned/illustrations/councilchamber_bg.dds"
				margin = { -5 0 }
				fittype = end
				alpha = 0.15
				framesize = { 1200 848 }

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}

			blockoverride "scrollbox_margins"
			{
				margin_top = 15
				margin_bottom = 15
				margin_right = 5
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "liege_court_positions"
					visible = "[And(And(CourtPositionsWindow.CourtOwner.HasLiege, CourtPositionsWindow.CourtOwner.HoldsCourtPosition), Not(CourtPositionsWindow.HasCategoryFilter))]"
					layoutpolicy_horizontal = expanding

					using = Animation_Tab_Switch

					hbox_court_positions_header_button = {
						layoutpolicy_horizontal = expanding

						blockoverride "onclick"
						{
							onclick = "[GetVariableSystem.Toggle( 'expand_held_court_positions' )]"
						}

						blockoverride "button_expand"
						{
							frame = "[Select_int32(GetVariableSystem.Exists( 'expand_held_court_positions'), '(int32)2', '(int32)1')]"
						}

						blockoverride "text"
						{
							text = "COURT_POSITIONS_your_positions_in_liege_court"
						}
					}

					### Your titles
					vbox = {
						name = "your_court_positions"
						visible = "[GetVariableSystem.Exists( 'expand_held_court_positions' )]"
						layoutpolicy_horizontal = expanding

						using = Animation_Tab_Switch

						text_single = {
							visible = "[IsDataModelEmpty( CourtPositionsWindow.HeldPositions )]"
							text = "COURT_POSITIONS_no_positions_with_liege"
							default_format = "#weak"
							margin = { 0 10 }
						}

						vbox_court_positions_sublist = {
							blockoverride "cps_root"
							{
								datamodel = "[CourtPositionsWindow.HeldPositions]"
								visible = "[Not(IsDataModelEmpty( CourtPositionsWindow.HeldPositions ))]"
							}
							blockoverride "cps_item"
							{
								widget_your_court_position_item = {}
							}
						}
					}
				}

				vbox = {
					name = "your_court_positions"
					layoutpolicy_horizontal = expanding
					visible = "[Not(IsDataModelEmpty( CourtPositionsWindow.EmployedPositions ))]"

					hbox_court_positions_header_button = {
						layoutpolicy_horizontal = expanding

						blockoverride "onclick"
						{
							onclick = "[GetVariableSystem.Toggle( 'expand_active_court_positions' )]"
						}

						blockoverride "button_expand"
						{
							frame = "[Select_int32(GetVariableSystem.Exists( 'expand_active_court_positions'), '(int32)2', '(int32)1')]"
						}

						blockoverride "text"
						{
							text = "COURT_POSITIONS_COURT_VIEW_positions_in_your_court"
						}
					}

					### Titles in your court
					vbox = {
						name = "active_positions_in_your_court"
						visible = "[GetVariableSystem.Exists( 'expand_active_court_positions' )]"
						layoutpolicy_horizontal = expanding

						using = Animation_Tab_Switch

						text_single = {
							visible = "[IsDataModelEmpty( CourtPositionsWindow.EmployedPositions )]"
							text = "COURT_POSITIONS_no_positions_in_your_court"
							default_format = "#weak"
							margin = { 0 10 }
						}

						vbox_court_positions_sublist = {
							blockoverride "cps_root"
							{
								visible = "[Not(IsDataModelEmpty( CourtPositionsWindow.EmployedPositions ))]"
								datamodel = "[CourtPositionsWindow.EmployedPositions]"
							}
							blockoverride "cps_item"
							{
								widget_hired_court_position_item = {}
							}
						}
					}
				}

				vbox = {
					name = "your_empty_court_positions"
					layoutpolicy_horizontal = expanding

					hbox_court_positions_header_button = {
						layoutpolicy_horizontal = expanding

						blockoverride "onclick"
						{
							onclick = "[GetVariableSystem.Toggle( 'expand_empty_court_positions' )]"
						}

						blockoverride "button_expand"
						{
							frame = "[Select_int32(GetVariableSystem.Exists( 'expand_empty_court_positions'), '(int32)2', '(int32)1')]"
						}

						blockoverride "text"
						{
							text = "COURT_POSITIONS_WINDOW_EMPTY_POSITION_HEADER"
						}
					}

					### Empty positions in your court
					vbox = {
						name = "empty_positions_in_your_court"
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.Exists( 'expand_empty_court_positions' )]"

						using = Animation_Tab_Switch

						text_single = {
							visible = "[IsDataModelEmpty( CourtPositionsWindow.EmptyPositions )]"
							text = "COURT_POSITIONS_no_positions_in_your_court"
							default_format = "#weak"
							margin = { 0 10 }
						}

						vbox_court_positions_sublist = {
							blockoverride "cps_root"
							{
								datamodel = "[CourtPositionsWindow.EmptyPositions]"
								visible = "[Not(IsDataModelEmpty( CourtPositionsWindow.EmptyPositions ))]"
							}
							blockoverride "cps_item"
							{
								widget_empty_court_position_item = {}
							}
						}
					}
				}
			}
		}

		## Position finances
		vbox = {
			name = "salaries_tutorial_uses_this"
			layoutpolicy_horizontal = expanding
			margin_top = 20
			margin_left = 5
			spacing = 5
			margin_right = 5

			background = {
				using = Background_Area
				margin = { 0 -15 }
				margin_bottom = 10
				margin_left = -15
				margin_right = -15
			}

			hbox = {
				visible = "[CourtPositionsWindow.CourtOwner.HoldsCourtPosition]"
				margin_left = -20
				layoutpolicy_horizontal = expanding

				expand = {
					minimumsize = { 50 0 }
				}

				text_single = {
					text = "COURT_POSITIONS_COURT_VIEW_salaries_gained"
					layoutpolicy_horizontal = expanding
				}

				text_single = {
					datacontext = "[CourtPositionsWindow.CourtPositionsIncomeBreakdown]"
					text = "[CourtPositionsWindow.TotalEarnedSalaries]"
					default_format = "#high"

					tooltipwidget = {
						widget_value_breakdown_tooltip = {}
					}
				}

				expand = {
					minimumsize = { 20 0 }
				}
			}

			hbox = {
				margin_left = -20
				layoutpolicy_horizontal = expanding

				expand = {
					minimumsize = { 50 0 }
				}

				text_single = {
					text = "COURT_POSITIONS_COURT_VIEW_salaries_paid"
					layoutpolicy_horizontal = expanding
				}

				text_single = {
					datacontext = "[CourtPositionsWindow.CourtPositionsExpenseBreakdown]"
					text = "[CourtPositionsWindow.TotalPaidSalaries]"
					default_format = "#high"

					tooltipwidget = {
						widget_value_breakdown_tooltip = {}
					}
				}

				expand = {
					minimumsize = { 20 0 }
				}
			}
		}
	}

	#TODO TIT-42781: For better performance, change this to a fixedgridbox
	type vbox_court_positions_sublist = vbox
	{
		block "cps_root"
		{

		}

		using = Animation_Tab_Switch

		margin = {8 8}
		spacing = 4

		item = {
			block "cps_item"
			{

			}
		}
	}

	type widget_your_court_position_item = widget_court_position_entry_base
	{
		blockoverride "cp_root"
		{
			size = {537 210}

			datacontext = "[CourtPosition.GetPositionType]"


			background = {
				using = Background_Area_Light
				margin_top = 2
			}

			background = {
				using = Background_Frame
				margin_top = 2
				margin_bottom = 2
				margin_right = -3
			}
		}

		blockoverride "cp_salary"
		{
			text = "[CourtPosition.GetSalaryText]"
			tooltip = "[CourtPosition.GetSalaryBreakdownTooltip]"
		}

		blockoverride "cp_portrait"
		{
			portrait_head_small = {
				datacontext = "[CourtPosition.GetEmployer]"
			}
		}

		blockoverride "cp_effects"
		{
			text = "[CourtPosition.GetEmployeeBonuses]"
		}

		blockoverride "cp_heading_line_2"
		{
			hbox = {
				layoutpolicy_horizontal = expanding
				margin = {16 0}
				margin_bottom = 8
				spacing = 16

				text_single = {
					text = "COURT_POSITION_FOR_EMPLOYER"
					align = nobaseline
				}

				expand = {}
			}
		}
	}

	type widget_hired_court_position_item = widget_court_position_entry_base
	{
		blockoverride "cp_root"
		{
			size = {537 210}

			datacontext = "[EmployedPositionItem.GetPosition]"
			datacontext = "[CourtPosition.GetEmployee]"
			datacontext = "[CourtPosition.GetPositionType]"

			#TODO TIT-42781: For better performance, cull these items from the datamodel. Is this line even needed? Why do we hide positions that you have hired?
			visible = "[EmployedPositionItem.CanShow]"

			background = {
				using = Background_Area_Light
				margin_top = 2
				alpha = 0.6
			}

			background = {
				using = Background_Frame
				margin_top = 2
				margin_bottom = 2
				margin_right = -3
			}
		}

		blockoverride "cp_heading_top_right_insert"
		{
			button_change = {
				onclick = "[EmployedPositionItem.Replace]"
				tooltip = "COURT_POSITION_REPLACE"
				using = tooltip_ne
			}

			button_cancel = {
				onclick = "[EmployedPositionItem.Revoke]"
				tooltip = "COURT_POSITION_REVOKE"
				using = tooltip_ne
			}
		}

		blockoverride "cp_salary"
		{
			text = "[CourtPosition.GetSalaryText]"
			tooltip = "[CourtPosition.GetSalaryBreakdownTooltip]"
		}

		blockoverride "cp_portrait"
		{
			portrait_head_small = {
			}
		}

		blockoverride "cp_ai_score"
		{
			text = "[CourtPosition.GetAICandidateScore]"
		}

		blockoverride "cp_effects"
		{
			text = "[CourtPosition.GetEmployerBonuses]"
		}

		blockoverride "cp_extra_effects"
		{

			text_single = {
				name = "aptitude"
				layoutpolicy_horizontal = expanding
				align = left|nobaseline

				background = {
					using = Background_Area

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
						blend_mode = alphamultiply
					}
				}
				margin = {8 8}

				text = "COURT_POSITION_aptitude_description_position"

				tooltipwidget = {
					court_position_aptitude_breakdown_tooltip = {
						datacontext = "[CourtPosition.GetAptitudeTooltip]"

						blockoverride "header_text" {
							text = COURT_POSITION_aptitude_description_position
						}

						blockoverride "modifier_list" {
							text = "[CourtPosition.GetEmployerBonuses]"
						}
					}
				}
			}
		}

		blockoverride "cp_heading_line_2"
		{
			hbox = {
				layoutpolicy_horizontal = expanding
				
				margin = { 16 0 }
				margin_bottom = 4
				spacing = 8

				text_single = {
					text = "[CourtPosition.GetEmployee.GetUINameNoTooltip]"
					align = nobaseline
					max_width = 180
				}

				expand = {}

				text_single = {
					default_format = "#weak"
					text = "[CourtPosition.GetTimeOfService]"
					align = nobaseline
					max_width = 160
				}

				text_single = {
					name = "opinion_bonus"
					text = "COURT_POSITION_OPINION_BONUS"
					align = nobaseline
					max_width = 160
				}
			}
		}
	}

	type widget_empty_court_position_item = widget_court_position_entry_base
	{
		blockoverride "cp_root"
		{
			size = {537 180}

			datacontext = "[EmptyCourtPosition.GetType]"

			#TODO TIT-42781: For better performance, cull these items from the datamodel
			visible = "[EmptyCourtPosition.CanShow]"

			background = {
				visible = "[And(Not(EmptyCourtPosition.IsAppointing), EmptyCourtPosition.CanHirePosition)]"
				using = Background_Area_Dark
				using = Mask_Rough_Edges
				alpha = 0.5
				margin_top = 2
			}

			background = {
				visible = "[Not(EmptyCourtPosition.CanHirePosition)]"
				using = Background_Frame
				alpha = 0.5
				margin_right = -3
			}

			background = {
				visible = "[EmptyCourtPosition.IsAppointing]"
				texture = "gfx/interface/colors/white.dds"
				spriteType = Corneredtiled
				using = Color_Blue
				alpha = 0.3

				using = Mask_Rough_Edges

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = alphamultiply
					mirror = horizontal
				}
			}
		}

		blockoverride "cp_salary"
		{
			text = "[CourtPositionType.GetSalaryTextFor(CourtPositionsWindow.CourtOwner)]"
			tooltip = "[CourtPositionType.GetSalaryBreakdownFor(CourtPositionsWindow.CourtOwner)]"
		}

		blockoverride "cp_portrait"
		{
			widget_empty_court_position_portrait = {
				datacontext = "[EmptyCourtPosition]"
				tooltip = "COURT_POSITIONS_WINDOW_EMPTY_POSITION_NO_ADD_TT"
				using = tooltip_ws
			}
		}

		blockoverride "cp_ai_score"
		{
			text = "[EmptyCourtPosition.GetAiCandidateScore]"
		}

		blockoverride "cp_effects"
		{
			text = "[CourtPositionType.GetLiegeModifierDescription]"
		}


	}

	type widget_court_position_entry_base = widget
	{

		block "cp_root"
		{
			#need to set a size! (width is 537)
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			vbox = {
				name = "heading"
				layoutpolicy_horizontal = expanding

				margin = { 0 4 }

				#### COMMON BACKGROUND ####
				background = {
					block "cp_common_bg_visible"
					{
						visible = "[Not(CourtPositionType.CourtPositionRequiresRankOrHigher('kingdom'))]"
					}

					spriteType = Corneredtiled
					using = Color_Blue
					alpha = 0.3
					texture = "gfx/interface/colors/white.dds"


					using = Mask_Rough_Edges

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
						mirror = horizontal
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
						spriteType = Corneredtiled
						blend_mode = alphamultiply
						alpha = 0.2
					}
				}

				#### ROYAL BACKGROUND ####
				background = {
					block "cp_royal_bg_visible"
					{
						visible = "[CourtPositionType.CourtPositionRequiresRankOrHigher('kingdom')]"
					}

					spriteType = Corneredtiled
					using = Color_Purple
					alpha = 0.3
					texture = "gfx/interface/colors/white.dds"

					using = Mask_Rough_Edges

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
						mirror = horizontal
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
						spriteType = Corneredtiled
						blend_mode = alphamultiply
						alpha = 0.3
					}
				}

				margin_widget = {
					name = "upper_line"
					layoutpolicy_horizontal = expanding
					size = { 0 30 }
					margin = { 16 16 }

					tooltipwidget = {
						court_position_type_tooltip = { }
					}
					using = tooltip_ws


					#### POSITION ####
					text_single = {
						text = "[CourtPositionType.GetNameNoTooltip]"
						default_format = "#high"
						using = Font_Size_Medium
						align = nobaseline

						parentanchor = vcenter|left
					}


					#### DEBUG AI SCORE ####
					text_single = {
						name = "ai_score"
						visible = "[InDebugMode]"
						block "cp_ai_score"
						{
							text = ""
						}
						default_format = "#D"
						parentanchor = vcenter|left
						align = nobaseline

						position = {100 0}
					}


					flowcontainer = {
						parentanchor = vcenter|right
						ignoreinvisible = yes

						block "cp_heading_top_right_insert"
						{

						}

						icon = {
							name = "powerful_agent_warning"
							visible = "[CourtPositionType.IsPowerfulAgent]"
							size = { 30 30 }
							texture = "gfx/interface/icons/symbols/icon_alert.dds"
							tooltip = "COURT_POSITION_POWERFUL_AGENT"
							using = tooltip_ne
						}

						spacer = {
							size = { 5 0 }
						}

						text_single = {
							default_format = "#high"
							block "cp_salary"
							{

							}
							using = tooltip_ne
						}


					}
				}

				block "cp_heading_line_2"
				{

				}

			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				margin = { 8 4 }
				margin_bottom = 4
				#spacing = 4

				vbox = {
					layoutpolicy_vertical = expanding
					block "cp_portrait"
					{

					}

					expand = {}

				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						block "cp_extra_effects"
						{

						}

						text_multi = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin = { 8 4 }

							align = top|left|nobaseline
							block "cp_effects"
							{
							}
						}



						expand = {}
					}
					expand = {}
				}
			}
		}


	}

	type widget_empty_court_position_portrait = widget {
		size = { 85 90 }

		background = {
			using = Background_Area_Solid

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
				blend_mode = alphamultiply
				alpha = 0.2
				mirror = vertical
			}
		}

		widget = {
			size = { 100% 100% }

			background = {
				texture = "gfx/portraits/portrait_frame.dds"
				using = Color_Grey
				margin = { -4 -4 }
				alpha = 0.5
			}
		}

		button = {
			size = { 100% 100% }
			enabled = "[And(EmptyCourtPosition.CanHirePosition, GreaterThan_int32(EmptyCourtPosition.NumValidCourtiers, '(int32)0') )]"
			onclick = "[EmptyCourtPosition.Appoint]"
			name = "position_portrait_tutorial_uses_this"

			state = {
				name = _mouse_hierarchy_enter
				on_start = "[PdxGuiWidget.FindChild('highlight_frame').TriggerAnimation('show')]"

			}

			state = {
				name = _mouse_hierarchy_leave
				on_start = "[PdxGuiWidget.FindChild('highlight_frame').TriggerAnimation('hide')]"

			}

			highlight_icon = {
				name = "portrait_unknown_head_small_glow"
				parentanchor = center
				position = { 3 -9 }
				gfxtype = framedbuttongfx
				effectname = "NoHighlight"
				texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
				size = { 80 100 }
				framesize = { 384 480 }
				upframe = 1
				overframe = 2
			}

			button_plus = {
				visible = "[And(EmptyCourtPosition.CanHirePosition, GreaterThan_int32(EmptyCourtPosition.NumValidCourtiers, '(int32)0') )]"
				parentanchor = center
				position = { 0 0 }
				onclick = "[EmptyCourtPosition.Appoint]"
			}

			widget = {
				name = "highlight_frame"
				size = { 100% 100% }
				alwaystransparent = yes
				alpha = 0

				state = {
					name = "show"
					alpha = 1
				}

				state = {
					name = "hide"
					alpha = 0
				}

				background = {
					size = { 100% 100% }
					texture = "gfx/portraits/portrait_frame.dds"
					using = Color_Grey
					alpha = 0.7
					margin = { -4 -4 }
				}
			}
		}
	}

	type button_position_category = button_standard_clean {

		text_single = {
			parentanchor = vcenter|right
			position = { -10 -2 }
			default_format = "#low"
			max_width = 50

			block "hire_available_text" { }
		}
	}

	type hbox_court_positions_header_button = hbox {
		margin = { 10 5 }

		background = {
			using = Background_Area_Dark
			alpha = 0.5
		}

		button_normal = {
			layoutpolicy_horizontal = expanding
			size = { 0 25 }

			block "onclick" {}

			hbox = {
				ignoreinvisible = yes
				spacing = 5

				button_expand = {
					block "button_expand" {}
					block "onclick" {}
				}

				text_single = {
					layoutpolicy_horizontal = expanding
					align = nobaseline
					alwaystransparent = yes

					block "text" {}
				}
			}
		}
	}
}

template Expand_Court_Positions {
	on_start = "[GetVariableSystem.Set( 'expand_held_court_positions', 'true' )]"
	on_start = "[GetVariableSystem.Set( 'expand_active_court_positions', 'true' )]"
	on_start = "[GetVariableSystem.Set( 'expand_empty_court_positions', 'true' )]"
}
