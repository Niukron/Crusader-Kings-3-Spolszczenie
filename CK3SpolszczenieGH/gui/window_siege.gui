### SIEGE WINDOW
window = {
	name = "siege_window"
	size = { 625 610 }
	parentanchor = bottom|left
	movable = no
	layer = middle
	datacontext = "[SiegeWindow.GetSiege]"
	datacontext = "[Siege.GetProvince]"

	state = {
		name = "monthly_tick" # to prevent an error about there being no such animation
		alpha = 1 # to prevent an error about there being no properties in the animation
	}

	state = {
		name = _show
		on_start = "[PdxGuiTriggerAllAnimations('siege_window_refresh')]"
	}

	state = {
		name = _show
		on_start = "[GetVariableSystem.Set( 'siege_view_open', 'true' )]"
		on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"

		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
		using = Animation_FadeIn_BottomLeft
	}

	state = {
		name = _hide
		on_start = "[GetVariableSystem.Clear( 'siege_view_open' )]"
		on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"

		using = Animation_FadeOut_Standard
		using = Sound_WindowHide_Standard
		using = Sound_Kill_Siege_SFX
		using = Animation_FadeOut_BottomLeft
	}

	background = {
		texture = "gfx/interface/component_tiles/tile_window_background_subwindow.dds"
		spriteType = Corneredtiled
		spriteborder = { 18 18 }
		margin = { -23 -17 }
		margin_left = 20
		margin_bottom = 20
		texture_density = 2
		
		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/component_overlay/overlay_effect.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
		}
	}

	vbox = {
		name = "window_content"
		margin_right = 35
		margin_top = 30
		set_parent_size_to_minimum = yes

		### Header ###
		hbox = {
			min_width = 550
			layoutpolicy_horizontal = expanding
			margin_right = 15
			margin_left = 5
			margin_top = 5
			margin_bottom = 5

			background = {
				using = Background_Area_Dark
				margin_left = 5
			}

			background = {
				visible = "[Not(SiegeWindow.GetSiege.IsPlayerInAttackerSide)]"
				texture = "gfx/interface/component_masks/mask_header_lines.dds"
				using = Color_Red
				alpha = 0.25
				spriteType = corneredtiled
				spriteborder_left = 340
				texture_density = 2
				margin = { 0 -3 }
				using = Mask_Rough_Edges
			}

			background = {
				visible = "[SiegeWindow.GetSiege.IsPlayerInAttackerSide]"
				texture = "gfx/interface/component_masks/mask_header_lines.dds"
				using = Color_Green
				alpha = 0.25
				spriteType = corneredtiled
				spriteborder_left = 340
				texture_density = 2
				margin = { 0 -3 }
				using = Mask_Rough_Edges
			}

			highlight_icon = {
				size = { 40 40 }
				name = "blocked_icon"
				texture = "gfx/interface/icons/map_icons/icon_siege.dds"
				tooltip = "[Siege.GetSiegeDescription]"
			}

			text_single = {
				name = "title"
				# ZMIANA
				#text = "[SiegeWindow.GetSiege.GetName]"
				text = "siege_name_adj"
				margin_left = 5
				margin_bottom = 4
				using = Font_Size_Big
				font = TitleFont
				default_format = "#high;glow_color:{0,0,0,1}"
			}

			expand = {}

			hbox = {
				icon = { # Mild Winter
					name = "winter_level_icon_mild"
					datacontext = "[SiegeWindow.GetSiege.GetProvince]"
					visible = "[Province.HasWinterLevel( '(int32)1' )]"
					texture = "gfx/interface/icons/terrain_types/winter_mild.dds"
					size = { 35 35 }
					tooltip = "PROVINCE_VIEW_TOOLTIP_WINTER"
				}

				icon = { # Normal Winter
					name = "winter_level_icon_normal"
					datacontext = "[SiegeWindow.GetSiege.GetProvince]"
					visible = "[Province.HasWinterLevel( '(int32)2' )]"
					texture = "gfx/interface/icons/terrain_types/winter_normal.dds"
					size = { 35 35 }
					tooltip = "PROVINCE_VIEW_TOOLTIP_WINTER"
				}

				icon = { # Harsh Winter
					name = "winter_level_icon_harsh"
					datacontext = "[SiegeWindow.GetSiege.GetProvince]"
					visible = "[Province.HasWinterLevel( '(int32)3' )]"
					texture = "gfx/interface/icons/terrain_types/winter_harsh.dds"
					size = { 35 35 }
					tooltip = "PROVINCE_VIEW_TOOLTIP_WINTER"
				}

				spacing = 3

				icon = {
					datacontext = "[SiegeWindow.GetSiege.GetProvince.GetTerrain]"
					texture = "[Terrain.GetIcon]"
					tooltip = "HOLDING_TERRAIN_TOOLTIP"
					size = { 35 35 }
				}	
			}		

			button_group = {
				onclick = "[SiegeWindow.OpenArmyWindow]"
				visible = "[SiegeWindow.HasPlayerOwnedArmies]"
				tooltip = "SW_TT_OPEN_ARMY_WINDOW"
				using = tooltip_ne

				highlight_icon = {
					parentanchor = vcenter
					widgetanchor = vcenter
					size = { 40 40 }
					name = "blocked_icon"
					texture = "gfx/interface/icons/map_icons/onmap_army_icon.dds"
				}
			}

			button_group = {
				onclick = "[SiegeWindow.OpenHoldingView]"
				tooltip = "SW_TT_SHOW_HOLDING"
				shortcut = county_go_to_siege
				using = tooltip_ne

				highlight_icon = {
					parentanchor = vcenter
					widgetanchor = vcenter
					size = { 40 40 }
					name = "blocked_icon"
					texture = "gfx/interface/icons/map_icons/onmap_holding_icon.dds"
				}
			}

			spacer = {
				size = { 10 10 }
			}

			buttons_window_control = {
				blockoverride "button_go_to"
				{
					onclick = "[DefaultOnCoatOfArmsRightClick( SiegeWindow.GetSiege.GetProvince.GetCounty.GetTitle.GetID)]"
					tooltip = "GOTO_PROVINCE_TT"
					using = tooltip_ne
					oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
				}

				blockoverride "button_close"
				{
					onclick = "[SiegeWindow.Close]"
				}
			}
		}

		widget = {
			layoutpolicy_horizontal = expanding
			size = { 0 270 }

			state = {
				name = "siege_window_refresh"
				using = Animation_Refresh_FadeOut
			}

			state = {
				using = Animation_Refresh_FadeIn
			}

			proportional_icon = {
				size = { 100% 100% }
				texture = "[SiegeWindow.GetSiege.GetProvince.GetIllustration]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_holding_illustration.dds"
					blend_mode = alphamultiply
				}

				modify_texture = {
					name = "orange"
					texture = "gfx/interface/colors/orange.dds"
					blend_mode = colordodge
					alpha = "[Multiply_float(Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.01'), Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.005'))]"
				}
			}

			proportional_icon = {
				visible = "[Not(SiegeWindow.GetSiege.IsBlocked)]"
				size = { 100% 100% }
				texture = "gfx/interface/window_siege/base_holding_fire.dds"

				using = Mask_Rough_Edges

				modify_texture = {
					name = "orange"
					texture = "gfx/interface/colors/orange.dds"
					blend_mode = colordodge
					alpha = "[Multiply_float(Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.005'), Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.005'))]"
				}

				modify_texture = {
					name = "fire"
					framesize = { 200 120 }
					texture = "gfx/interface/component_effects/fire_03.dds"
					blend_mode = colordodge
				}

				using = Animation_ShowHide_Standard
				using = Animation_Frames_100_Modify
				
				state = {
					name = "siege_progress_0"
					duration = 0.3
					alpha = 0
				}

				state = {
					name = "siege_progress_50"
					duration = 1
					alpha = 0.2
					start_sound = {
						soundeffect = "event:/SFX/UI/Siege/sfx_ui_siege_vfx_fire_01"
					}
				}

				state = {
					name = "siege_progress_70"
					duration = 1
					alpha = 0.35
					start_sound = {
						soundeffect = "event:/SFX/UI/Siege/sfx_ui_siege_vfx_fire_02"
					}
				}

				state = {
					name = "siege_progress_85"
					duration = 1
					alpha = 0.6
					start_sound = {
						soundeffect = "event:/SFX/UI/Siege/sfx_ui_siege_vfx_fire_03"
					}
				}
			}

			widget = {
				size = { 100% 100% }
				datacontext = "[SiegeWindow.GetSiege]"
				visible = "[SiegeWindow.GetSiege.IsBlocked]"
				using = Animation_ShowHide_Standard

				icon = {
					name = "pause"
					alpha = 0.2
					size = { 100% 100% }
					texture = "gfx/interface/hud/speed_indicator_auto_pause.dds"

					using = Mask_Rough_Edges
				}

				text_label_center = {
					parentanchor = center
					tooltip = "[Siege.GetBlockedReason]"
					text = "[Siege.GetBlockedReasonShort]"
				}
			}

			vbox = {
				margin_top = 5

				hbox = {
					name = "progressbar_area"
					datacontext = "[SiegeWindow.GetSiege.GetSiegingRealmCharacter]"
					layoutpolicy_horizontal = expanding

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutstretchfactor_horizontal = 1
						margin_bottom = 5

						coa_realm_medium = {
							name = "occupant_realm"
							visible = "[SiegeWindow.GetSiege.HasSiegingRealm]"
							tooltip = "SW_TT_SIEGING_REALM_TOOLTIP"
							using = tooltip_ws

							using = Animation_ShowHide_Standard
						}
					}

					vbox = {
						layoutpolicy_vertical = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 5

							tooltip = "[SiegeWindow.GetSiegeProgressTooltip]"
							using = tooltip_above

							widget = {
								size = { 370 45 }

								widget = {
									size = { 100% 100% }
									scissor = yes

									margin_widget = {
										size = { 100% 100% }
										margin = { 0 5 }

										background = {
											texture = "gfx/interface/progressbars/war_progress_noprogress.dds"
											margin = { 0 -3 }
										}

										widget = {
											visible = "[GreaterThan_float(SiegeWindow.GetSiege.GetProgress, '(float)60')]"
											size = { 100% 100% }
											using = Animation_ShowHide_Standard

											widget = {
												size = { 100% 100% }
												alpha = 0.5

												state = {
													name = a
													next = b
													trigger_on_create = yes
													duration = 1
													alpha = 0.3
												}

												state = {
													name = b
													next = a
													duration = 1
													alpha = 0.1
												}

												icon = {
													visible = "[Not(SiegeWindow.GetSiege.IsPlayerInAttackerSide)]"
													size = { 100% 100% }
													texture = "gfx/interface/colors/white.dds"
													using = Color_Red
													alpha = "[Multiply_float(Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.01'), Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.01'))]"
													shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"

													modify_texture = {
														name = "clouds"
														texture = "gfx/interface/component_masks/mask_clouds.dds"
														blend_mode = alphamultiply
														spriteType = corneredtiled
														texture_density = 2
													}

													state = {
														name = a
														next = b
														trigger_on_create = yes

														modify_texture = {
															name = "clouds"
															translate_uv = { -1 0 }
														}
													}

													state = {
														name = b
														next = a
														duration = 2

														modify_texture = {
															name = "clouds"
															translate_uv = { 1 0 }
														}
													}
												}

												icon = {
													visible = "[SiegeWindow.GetSiege.IsPlayerInAttackerSide]"
													size = { 100% 100% }
													texture = "gfx/interface/colors/white.dds"
													using = Color_Green
													alpha = "[Multiply_float(Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.01'), Multiply_float( IntToFloat(GetProgressBarValueMax( SiegeWindow.GetSiege.GetProgress, '(float)100' )), '(float)0.01'))]"
													shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"

													modify_texture = {
														name = "clouds"
														texture = "gfx/interface/component_masks/mask_clouds.dds"
														blend_mode = alphamultiply
														spriteType = corneredtiled
														texture_density = 2
													}

													state = {
														name = a
														next = b
														trigger_on_create = yes

														modify_texture = {
															name = "clouds"
															translate_uv = { -1 0 }
														}
													}

													state = {
														name = b
														next = a
														duration = 2

														modify_texture = {
															name = "clouds"
															translate_uv = { 1 0 }
														}
													}
												}
											}
										}
									}

									hbox = {
										margin = { 0 3 }

										widget_progressbar_siege = {
											visible = "[Not(SiegeWindow.GetSiege.IsPlayerInAttackerSide)]"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( SiegeWindow.GetSiege.GetProgress, '(float)100', '(int32)370' )]"

											blockoverride "progressbar_texture"
											{
												texture = "gfx/interface/progressbars/war_progress_red.dds"
											}

											blockoverride "arrows_color"
											{
												texture = "gfx/interface/hud/speed_indicator_pause.dds"
											}
										}

										widget_progressbar_siege = {
											visible = "[SiegeWindow.GetSiege.IsPlayerInAttackerSide]"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( SiegeWindow.GetSiege.GetProgress, '(float)100', '(int32)370' )]"
										}

										widget = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( SiegeWindow.GetSiege.GetProgress, '(float)100', '(int32)370' )]"
										}
									}
								}

								widget = {
									name = "power_bar_frame"
									parentanchor = top
									size = { 100% 100% }
									alwaystransparent = yes

									background = {
										texture = "gfx/interface/progressbars/siege_frame.dds"
										spriteType = Corneredstretched
										spriteborder = { 30 40 }
										margin = { 5 0 }
										margin_bottom = 10
										texture_density = 2
									}
								}
							}
						}

						spacer = {
							size = { 10 10 }
						}

						text_label_center = {
							name = "time_left"
							visible = "[Not(SiegeWindow.GetSiege.IsBlocked)]"
							text = "[SiegeWindow.GetTimeLeftShort]"
							tooltip = "SW_TIME_LEFT_TT"

							using = Animation_ShowHide_Standard
						}

						expand = {}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutstretchfactor_horizontal = 1
						margin_bottom = 5

						coa_realm_medium = {
							name = "defending_realm"
							datacontext = "[SiegeWindow.GetSiege.GetProvince.GetController]"
							tooltip = "SW_TT_DEFENDING_REALM_TOOLTIP"
						}
					}
				}

				expand = {}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 7 0 }
					spacing = 10
					using = Animation_ShowHide_Standard

					expand = {}

					icon = {
						name = "holding_level_high"
						visible = "[SiegeWindow.GetSiege.FortLevelHasImpact]"
						texture = "gfx/interface/window_siege/fort_icon.dds"
						size = { 30 25 }
						tooltip = "[SiegeWindow.GetFortLevelImpactTooltip]"

						container = {
							parentanchor = bottom|right
							position = { 8 2 }

							icon = {
								name = "fort_level_bad"
								visible = "[SiegeWindow.GetSiege.IsPlayerInAttackerSide]"
								size = { 20 20 }
								texture = "gfx/interface/icons/symbols/icon_cross.dds"
							}

							icon = {
								name = "fort_level_good"
								visible = "[Not(SiegeWindow.GetSiege.IsPlayerInAttackerSide)]"
								size = { 20 20 }
								texture = "gfx/interface/icons/symbols/icon_check.dds"
							}
						}
					}

					hbox = {
						name = "tutorial_highlight_holding_view_loot_box"
						datacontext = "[SiegeWindow.GetSiege]"
						tooltip = "[Province.GetRaidLootTooltip]"
						margin = { 15 5 }
						spacing = 3

						background = {
							using = Background_Area_Dark
						}

						text_single = {
							text = "HOLDING_LOOT"
							default_format = "#high"
							align = nobaseline
						}

						text_single = {
							raw_text = "@gold_icon! [Siege.GetProvince.GetRaidLoot|0]"
							default_format = "#high"
							align = nobaseline
						}
					}
				}

				hbox = {
					datacontext = "[SiegeWindow.GetSiege]"
					datacontext = "[SiegeWindow.GetAttackerUnitItem]"
					layoutpolicy_horizontal = expanding
					margin_bottom = 5

					tooltip = "[SiegeWindow.GetNumberOfTroopsTooltip]"
					using = tooltip_above

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutstretchfactor_horizontal = 1
						margin_bottom = 8
						margin_right = 25
						spacing = 5

						expand = {}

						hbox = {
							visible = "[Not(SiegeWindow.GetSiege.IsBlocked)]"

							using = Animation_ShowHide_Standard

							container_allied_unit_icon_item = {
								blockoverride "unit_items" {}
								blockoverride "multi_select" {}
								blockoverride "onclick" {}
								blockoverride "siege_window" {}
							}

							container_hostile_unit_icon_item = {
								blockoverride "unit_items" {}
								blockoverride "multi_select" {}
								blockoverride "siege_window" {}
							}
						}
					}

					icon = {
						size = { 220 20 }


						hbox = {
							widget = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								layoutstretchfactor_horizontal = "[GetProgressBarValueMax( Siege.GetSiegeMenBalance, '(float)100' )]"

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/progressbars/progress_standard.dds"
									spriteType = Corneredtiled
									spriteborder = { 6 6 }

									modify_texture = {
										name = "horizontal_wipe"
										texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
										blend_mode = mask
									}

									modify_texture = {
										name = "colordodge"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0.1
									}

									state = {
										name = "monthly_tick_attacker_most_casualties"
										next = b
										trigger_on_create = yes

										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { -1 0 }
										}
									}

									state = {
										name = b
										next = b
										duration = 0.3
										using = Animation_Curve_Default


										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { 1 0 }
										}
									}
								}
							}

							widget = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOther( Siege.GetSiegeMenBalance, '(float)100' )]"

								icon = {
									size = { 100% 100% }
									texture = "gfx/interface/progressbars/progress_red.dds"
									spriteType = Corneredtiled
									spriteborder = { 6 6 }

									modify_texture = {
										name = "horizontal_wipe"
										texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
										blend_mode = mask
									}

									modify_texture = {
										name = "colordodge"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0.1
									}

									state = {
										name = "monthly_tick_defender_most_casualties"
										next = b
										trigger_on_create = yes

										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { 1 0 }
										}
									}

									state = {
										name = b
										next = b
										duration = 0.3
										using = Animation_Curve_Default


										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { -1 0 }
										}
									}
								}
							}
						}

						progress_threshold = {
							parentanchor = center
							size = { 5 20 }
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						layoutstretchfactor_horizontal = 1
						margin = { 10 0 }

						hbox = {

							hbox = {
								spacing = 5
								tooltip = "[Province.GetFortLevelTooltip]"

								icon = {
									name = "icon_fort"
									texture = "gfx/interface/window_siege/fort_icon.dds"
									size = { 30 25 }
								}

								text_single = {
									text = "[SiegeWindow.GetSiege.GetProvince.GetFortLevel]"
									default_format = "#high"
									align = nobaseline
									min_width = 20
								}
							}

							hbox = {
								spacing = 3

								icon = {
									texture = "gfx/interface/icons/icon_garrison.dds"
									size = { 40 40 }
								}

								text_single = {
									name = "defender_side"
									text = "[Siege.GetDefenderMen]"
									default_format = "#high"
									align = nobaseline
									min_width = 35
								}
							}
						}

						expand = {}
					}
				}
			}
		}

		divider = {
			layoutpolicy_horizontal = expanding
		}

		####################################
		########### HOLDING INFO ###########
		####################################

		widget = {
			name = "holding_info"
			layoutpolicy_horizontal = expanding
			size = { 0 240 }

			vbox = {
				margin = { 10 10 }

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 5

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						layoutstretchfactor_horizontal = 1

						# Daily Progress
						widget = {
							layoutpolicy_horizontal = expanding
							size = { 0 110 }
							tooltip = "[SiegeWindow.GetDailyProgressTooltip]"

							background = {
								using = Background_Area
							}

							icon = {
								size = { 100% 100% }
								texture = "gfx/interface/colors/white.dds"
								using = Color_Blue_Transparent
								using = Mask_Rough_Edges

								modify_texture = {
									name = "horizontal_wipe"
									texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
									blend_mode = alphamultiply
								}

								state = {
									name = "siege_daily_progress_flash"
									next = b
									trigger_on_create = yes

									modify_texture = {
										name = "horizontal_wipe"
										translate_uv = { 1 0 }
									}
								}

								state = {
									name = b
									duration = 0.8
									using = Animation_Curve_Default


									modify_texture = {
										name = "horizontal_wipe"
										translate_uv = { -1 0 }
									}
								}
							}

							vbox = {
								margin = { 10 10 }

								state = {
									name = "siege_window_refresh"
									using = Animation_Refresh_FadeOut
								}

								state = {
									using = Animation_Refresh_FadeIn
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									spacing = 3

									icon = {
										size = { 52 52 }
										texture = "gfx/interface/icons/regimenttypes/unit_stat_siege_progress.dds"
									}

									text_multi = {
										align = nobaseline
										autoresize = yes
										max_width = 110
										text = SW_DAILY_SIEGE_PROGRESS
									}

									expand = {}
								}

								text_single = {
									text = "SW_DAILY_PROGRESS"
									using = Font_Size_Big
								}

								expand = {}
							}
						}

						# Siege Machines
						widget = {
							layoutpolicy_horizontal = expanding
							size = { 0 110 }

							background = {
								using = Background_Area
							}

							widget = {
								name = "siege_machine_box"
								datacontext = "[SiegeWindow.GetStrongestSiegeRegiment.GetMAAType]"
								datacontext = "[GetPlayer]"
								visible = "[DataModelHasItems(SiegeWindow.GetSiegeMachinesRegiments)]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								state = {
									name = "siege_window_refresh"
									using = Animation_Refresh_FadeOut
								}

								state = {
									using = Animation_Refresh_FadeIn
								}

								tooltipwidget = {
									overlappingitembox = {
										name = "siege_machines_box"
										alwaystransparent = no
										size = { 180 40 }
										using = DefaultTooltipBackground

										vbox = {
											layoutpolicy_horizontal = expanding
											set_parent_size_to_minimum = yes
											margin = { 10 5 }
											spacing = 10

											text_label_left = {
												layoutpolicy_horizontal = expanding
												name = "header"
												raw_text = "[siege_weapons|E]:"
												maximumsize = { 400 -1 }
											}

											dynamicgridbox = {
												datamodel = "[SiegeWindow.GetSiegeMachinesRegiments]"
												layoutpolicy_horizontal = expanding
												flipdirection = yes

												item = {
													widget = {
														datacontext = "[Regiment.GetMAAType]"
														datacontext = "[GetPlayer]"
														size = { 40 40 }

														icon = {
															name = "machine_icon"

															block "overlay_size"
															{
																size = { 40 40 }
															}

															alwaystransparent = yes
															texture = "[MenAtArmsType.GetIcon]"
														}

														tooltipwidget = {
															using = maa_type_container_tooltip
														}

														using = tooltip_nw
													}
												}

												expand = {}
											}
										}
									}
								}

								background = {
									texture = "[MenAtArmsType.GetHorizontalImage]"
									using = Mask_Rough_Edges
								}

								vbox = {
									expand = {}

									hbox = {
										layoutpolicy_horizontal = expanding
										margin = { 10 5 }

										text_single = {
											layoutpolicy_horizontal = expanding
											text = "SW_SIEGE_WEAPON"
											align = nobaseline
										}

										text_single = {
											margin = { 5 0 }
											text = "[SiegeWindow.GetSiegeMachinesCount]"
											default_format = "#high"
											using = Font_Size_Medium
											align = nobaseline
										}
									}
								}

								using = tooltip_nw
							}

							widget = {
								visible = "[Not(DataModelHasItems(SiegeWindow.GetSiegeMachinesRegiments))]"
								size = { 100% 100% }

								using = Animation_ShowHide_Standard

								state = {
									name = "siege_window_refresh"
									using = Animation_Refresh_FadeOut
								}

								state = {
									using = Animation_Refresh_FadeIn
								}

								text_single = {
									text = "SW_SIEGE_WEAPON_NON"
									parentanchor = center
								}
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						layoutstretchfactor_horizontal = 1

						widget = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							size = { 0 160 }
							tooltip = "[SiegeWindow.GetSiegePhaseTooltip]"

							background = {
								using = Background_Area
							}

							icon = {
								size = { 100% 100% }
								texture = "gfx/interface/colors/white.dds"
								using = Color_Blue_Transparent
								alpha = 0

								using = Mask_Rough_Edges

								modify_texture = {
									name = "flash"
									texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
									blend_mode = alphamultiply
								}

								state = {
									name = "siege_event_flash"
									next = b
									trigger_on_create = yes
									using = Animation_Curve_Default
									duration = 0.3
									alpha = 1

									modify_texture = {
										name = "flash"
										alpha = 0
									}
								}

								state = {
									name = b
									duration = 1
									using = Animation_Curve_Default
									alpha = 0


									modify_texture = {
										name = "flash"
										alpha = 1
									}
								}
							}

							hbox = {
								state = {
									name = "siege_window_refresh"
									using = Animation_Refresh_FadeOut
								}

								state = {
									using = Animation_Refresh_FadeIn
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									spacing = 5
									margin_bottom = 5

									hbox = {
										layoutpolicy_horizontal = expanding
										margin_top = 10

										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 10
											margin = { 10 0 }

											widget = {
												size = { 40 40 }

												icon = {
													name = "progress_frame"
													size = { 100% 100% }
													texture = "gfx/interface/progressbars/progress_circle_frame.dds"
													alpha = 0.5
												}

												progresspie = {
													name = "progress"
													size = { 100% 100% }
													texture = "gfx/interface/progressbars/progress_circle.dds"
													framesize = { 248 248 }
													frame = "[SiegeWindow.GetPhaseTimerFrame]"
													value = "[Siege.GetPhaseProgress]"
													min = 0
													max = 1
												}
											}


											vbox = {
												layoutpolicy_horizontal = expanding

												text_single = {
													layoutpolicy_horizontal = expanding
													text = "SIEGE_EVENT"
													max_width = 105
													multiline = yes
													align = left|vcenter
												}

												text_single = {
													layoutpolicy_horizontal = expanding
													text = "[SiegeWindow.GetSiegePhaseLength]"
													default_format = "#high;glow_color:{0,0,0,1}"
													using = Font_Size_Big
													align = left|nobaseline
												}
											}
										}
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										margin = { 10 0 }

										divider_light = {
											layoutpolicy_horizontal = expanding
											alpha = 0.5
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										spacing = 5

										text_multi = {
											datacontext = "[SiegeWindow.GetSiege]"
											layoutpolicy_horizontal = expanding
											margin = { 10 0 }
											autoresize = yes
											max_width = 165
											text = "[SiegeWindow.GetActionHistoryTooltip('0')]"
										}

										widget = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding

											state = {
												name = "siege_event_flash"
												next = b
												trigger_on_create = yes

												alpha = 0
											}

											state = {
												name = b
												duration = 1
												using = Animation_Curve_Default

												alpha = 1
											}

											background = {
												name = "latest_action"
												visible = "[SiegeWindow.HasActionHistory('0')]"
												frame = "[SiegeWindow.GetActionHistoryFrame('0')]"
												texture = "gfx/interface/illustrations/siege/siege_actions.dds"
												framesize = { 360 200 }
												fittype = centercrop
												margin = { -5 0 }
												using = Mask_Rough_Edges
											}
										}
									}
								}
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						layoutstretchfactor_horizontal = 1

						state = {
							name = "siege_window_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							widget = {
								layoutpolicy_horizontal = expanding
								size = { 0 110 }
								tooltip = "[SiegeWindow.GetStarvationStateTooltip]"
								using = tooltip_ne

								state = {
									name = "siege_starvation_flash"
									next = b
									trigger_on_create = yes

									alpha = 0
								}

								state = {
									name = b
									duration = 1
									using = Animation_Curve_Default

									alpha = 1
								}

								proportional_icon = {
									size = { 100% 100% }
									frame = "[SiegeWindow.GetStarvationStateFrame]"
									texture = "gfx/interface/illustrations/siege/starvation_state.dds"
									framesize = { 340 420 }
									using = Mask_Rough_Edges

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0
									}

									modify_texture = {
										name = "horizontal_wipe"
										texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
										blend_mode = mask
									}

									modify_texture = {
										name = "colordodge"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0.2
									}

									state = {
										name = "siege_starvation_flash"
										next = b
										trigger_on_create = yes

										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { 1 0 }
										}
									}

									state = {
										name = b
										next = b
										duration = 0.8
										using = Animation_Curve_Default


										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { -1 0 }
										}
									}
								}
							}

							widget = {
								layoutpolicy_horizontal = expanding
								size = { 0 110 }
								tooltip = "[SiegeWindow.GetDiseaseStateTooltip]"
								using = tooltip_ne

								state = {
									name = "siege_disease_flash"
									next = b
									trigger_on_create = yes

									alpha = 0
								}

								state = {
									name = b
									duration = 1
									using = Animation_Curve_Default

									alpha = 1
								}

								proportional_icon = {
									size = { 100% 100% }
									frame = "[SiegeWindow.GetDiseaseStateFrame]"
									texture = "gfx/interface/illustrations/siege/disease_state.dds"
									framesize = { 340 420 }
									using = Mask_Rough_Edges

									modify_texture = {
										name = "flash"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0
									}

									modify_texture = {
										name = "horizontal_wipe"
										texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
										blend_mode = mask
									}

									modify_texture = {
										name = "colordodge"
										texture = "gfx/interface/colors/white.dds"
										blend_mode = colordodge
										alpha = 0.2
									}

									state = {
										name = "siege_disease_flash"
										next = b
										trigger_on_create = yes

										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { 1 0 }
										}
									}

									state = {
										name = b
										next = b
										duration = 0.8
										using = Animation_Curve_Default


										modify_texture = {
											name = "horizontal_wipe"
											translate_uv = { -1 0 }
										}
									}
								}
							}
						}

						widget = {
							layoutpolicy_horizontal = expanding
							size = { 0 110 }

							widget = {
								#Only show tooltip on the top part, so it does not interfere with Assault Button tooltip
								size = { 100% 60 }
								tooltip = "[SiegeWindow.GetBreachStateTooltip]"
							}
							

							state = {
								name = "siege_breach_flash"
								next = b
								trigger_on_create = yes

								alpha = 0
							}

							state = {
								name = b
								duration = 1
								using = Animation_Curve_Default

								alpha = 1
							}

							proportional_icon = {
								size = { 100% 100% }
								frame = "[SiegeWindow.GetBreachStateFrame]"
								texture = "gfx/interface/illustrations/siege/breach_state.dds"
								framesize = { 700 440 }
								using = Mask_Rough_Edges

								modify_texture = {
									name = "flash"
									texture = "gfx/interface/colors/white.dds"
									blend_mode = colordodge
									alpha = 0
								}

								modify_texture = {
									name = "horizontal_wipe"
									texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
									blend_mode = mask
								}

								modify_texture = {
									name = "colordodge"
									texture = "gfx/interface/colors/white.dds"
									blend_mode = colordodge
									alpha = 0.2
								}

								state = {
									name = "siege_breach_flash"
									next = b
									trigger_on_create = yes

									modify_texture = {
										name = "horizontal_wipe"
										translate_uv = { 1 0 }
									}
								}

								state = {
									name = b
									next = b
									duration = 0.8
									using = Animation_Curve_Default


									modify_texture = {
										name = "horizontal_wipe"
										translate_uv = { -1 0 }
									}
								}
							}

							button_tertiary = {
								datacontext = "[SiegeWindow.GetSiege]"
								visible = "[And(SiegeWindow.GetSiege.IsPlayerInAttackerSide,Siege.ShowAssaultButton)]"
								parentanchor = bottom|hcenter
								position = { 0 -5 }
								size = { 150 40 }

								enabled = "[Siege.EnableAssaultButton]"
								tooltip = "[Siege.GetAssaultButtonTooltip]"
								onclick = "[SiegeWindow.StartStopAssault]"
								shortcut = siege_assault

								using = Animation_ShowHide_Standard

								state = {
									name = _mouse_enter
									on_start = "[PdxGuiTriggerAllAnimations('siege_assault_button_enter')]"
								}

								state = {
									name = _mouse_leave
									on_start = "[PdxGuiTriggerAllAnimations('siege_assault_button_leave')]"
								}

								state = {
									name = _mouse_press
									on_start = "[PdxGuiTriggerAllAnimations('siege_assault_button_press')]"
								}
								# state = {
								# 	name = _mouse_release
								# 	on_start = "[PdxGuiTriggerAllAnimations('siege_assault_button_release')]"
								# }

								widget = {
									size = { 100% 100% }
									scissor = yes
									alwaystransparent = yes

									button_normal = {
										parentanchor = bottom|hcenter
										alwaystransparent = yes
										size = { 150% 150% }
										position = { -20 0 }
										framesize = { 200 110 }
										texture = "gfx/interface/component_effects/fire_02.dds"
										alpha = 0

										effectname = "NoHighlight"

										using = Animation_Frames_100

										state = {
											name = "siege_assault_button_enter"
											duration = 0.1
											using = Animation_Curve_Default

											alpha = 0.2
										}

										state = {
											name = "siege_assault_button_leave"
											duration = 0.3
											using = Animation_Curve_Default

											alpha = 0
										}
									}
								}

								margin_widget = {
									size = { 100% 100% }
									scissor = yes

									icon = {
										parentanchor = center
										size = { 150 50 }
										texture = "gfx/interface/buttons/button_standard_aggressive.dds"
										spriteType = corneredstretched
										spriteborder = { 35 0 }
										texture_density = 2
										alpha = 0.3

										state = {
											name = "siege_assault_button_enter"
											duration = 0.1
											using = Animation_Curve_Default
											size = { 170 50 }

											alpha = 0.5
										}

										state = {
											name = "siege_assault_button_leave"
											duration = 0.2
											using = Animation_Curve_Default
											size = { 150 50 }

											alpha = 0.3
										}

										state = {
											name = "siege_assault_button_press"
											duration = 0.05
											using = Animation_Curve_Default
											size = { 150 50 }

											alpha = 0.3
										}
									}
								}

								widget = {
									visible = "[Siege.EnableAssaultButton]"
									size = { 100% 100% }

									state = {
										name = "siege_assault_button_enter"
										duration = 0.2
										using = Animation_Curve_Default
										alpha = 0
									}

									state = {
										name = "siege_assault_button_leave"
										duration = 0.3
										using = Animation_Curve_Default
										alpha = 1
									}

									icon = {
										position = { 0 5 }
										size = { 100% 100% }
										texture = "gfx/interface/component_masks/mask_fade_circle.dds"
										using = Color_Red
										alpha = 0

										state = {
											name = a
											next = b
											trigger_on_create = yes
											duration = 1.4
											using = Animation_Curve_Default
											alpha = 0.8
										}

										state = {
											name = b
											duration = 0.6
											using = Animation_Curve_Default
											alpha = 0
										}
									}
								}

								icon = {
									parentanchor = center
									alwaystransparent = yes
									texture = "gfx/interface/icons/icon_skill_martial.dds"
									scale = 0.8
									alpha = 0.5

									state = {
										name = "siege_assault_button_enter"
										duration = 0.05
										using = Animation_Curve_Default

										scale = 1.2
										alpha = 1
									}

									state = {
										name = "siege_assault_button_leave"
										duration = 0.15
										using = Animation_Curve_Default

										scale = 0.8
										alpha = 0.5
									}

									state = {
										name = "siege_assault_button_press"
										duration = 0
										using = Animation_Curve_Default

										scale = 0.8
										alpha = 0.5
									}
								}

								icon = {
									position = { 0 5 }
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									color = { 0.1 0.1 0.1 1 }
									alpha = 0.2

									state = {
										name = "siege_assault_button_enter"
										duration = 0.05
										using = Animation_Curve_Default
										alpha = 0.8
									}

									state = {
										name = "siege_assault_button_leave"
										duration = 0.15
										using = Animation_Curve_Default
										alpha = 0.2
									}
								}

								text_single = {
									parentanchor = center
									text = "[SelectLocalization( Siege.IsAssaultInProgress, 'SW_STOP_ASSAULT', 'SW_START_ASSAULT' )]"
									using = Font_Size_Medium
									default_format = "#high;glow_color:{0,0,0,1}"
								}
							}

							vbox = {
								name = "time_and_assault"
								datacontext = "[SiegeWindow.GetSiege]"
								margin = { 10 10 }
								visible = "[SiegeWindow.GetSiege.IsAssaultInProgress]"

								text_label_center = {
									name = "assault_attacker"
									visible = "[SiegeWindow.GetSiege.IsPlayerInAttackerSide]"
									text = "SW_ASSAULTING_TEXT_ATTACKER"
									default_format = "#high"

									tooltip = "SIEGE_ASSAULT_TT_INFO_ACTIVE"
									align = center

									using = Animation_ShowHide_Standard
								}

								text_label_center = {
									name = "assault_not_attacker"
									visible = "[Not(SiegeWindow.GetSiege.IsPlayerInAttackerSide)]"
									text = "SW_ASSAULTING_TEXT_DEFENDER"
									default_format = "#N"

									tooltip = "SIEGE_ASSAULT_TT_INFO_ACTIVE"
									align = center

									using = Animation_ShowHide_Standard
								}
								expand = {}								
							}
						}
					}
				}

				expand = {}
			}

			sounds_siege_window = {}
		}
	}
}

types SiegeWindow
{

	type widget_progressbar_siege = widget {
		widget = {
			size = { 100% 100% }
			scissor = yes

			icon = {
				size = { 365 40 }
				
				block "progressbar_texture"
				{
					texture = "gfx/interface/progressbars/war_progress_blue.dds"
				}

				modify_texture = {
					name = "pause"
					visible = "[SiegeWindow.GetSiege.IsBlocked]"
					texture = "gfx/interface/hud/speed_indicator_auto_pause.dds"
					blend_mode = darken
				}

				# modify_texture = {
				# 	name = "horizontal_wipe"
				# 	texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
				# 	blend_mode = mask
				# }

				# modify_texture = {
				# 	name = "gold"
				# 	texture = "gfx/interface/colors/gold.dds"
				# 	blend_mode = colordodge
				# 	alpha = 0.1
				# }

				# state = {
				# 	name = "siege_daily_progress_flash"
				# 	next = b
				# 	trigger_on_create = yes

				# 	modify_texture = {
				# 		name = "horizontal_wipe"
				# 		translate_uv = { 1 0 }
				# 	}
				# }

				# state = {
				# 	name = b
				# 	duration = 0.8
				# 	using = Animation_Curve_Default

				# 	modify_texture = {
				# 		name = "horizontal_wipe"
				# 		translate_uv = { -1 0 }
				# 	}
				# }

				state = {
					name = "pause_1"
					next = "pause_2"
					trigger_on_create = yes

					modify_texture = {
						name = "pause"
						translate_uv = { -0.02 0 }
					}
				}

				state = {
					name = "pause_2"
					next = "pause_3"
					duration = 2

					modify_texture = {
						name = "pause"
						translate_uv = { 0.02 0 }
					}
				}

				state = {
					name = "pause_3"
					next = "pause_1"
					duration = 2

					modify_texture = {
						name = "pause"
						translate_uv = { -0.02 0 }
					}
				}

				state = {
					name = "siege_window_refresh"
					duration = 0.5
					trigger_on_create = yes
					trigger_when = "[LessThan_float(SiegeWindow.GetSiege.GetProgress, '(float)0')]"
					on_start = "[PdxGuiTriggerAllAnimations('siege_progress_0')]"
				}

				state = {
					name = "60"
					#duration = 0.5
					trigger_when = "[GreaterThan_float(SiegeWindow.GetSiege.GetProgress, '(float)50')]"
					on_start = "[PdxGuiTriggerAllAnimations('siege_progress_50')]"
				}

				state = {
					name = "80"
					#duration = 0.5
					trigger_when = "[GreaterThan_float(SiegeWindow.GetSiege.GetProgress, '(float)70')]"
					on_start = "[PdxGuiTriggerAllAnimations('siege_progress_70')]"
				}

				state = {
					name = "90"
					#duration = 0.5
					trigger_when = "[GreaterThan_float(SiegeWindow.GetSiege.GetProgress, '(float)85')]"
					on_start = "[PdxGuiTriggerAllAnimations('siege_progress_85')]"
				}
			}
		}

		animation_progessbar_center_glow = {
			visible = "[Not(SiegeWindow.GetSiege.IsBlocked)]"
			size = { 100% 100% }
		}

		flowcontainer = {
			visible = "[Not(SiegeWindow.GetSiege.IsBlocked)]"
			parentanchor = right|vcenter
			widgetanchor = left|vcenter
			margin_left = 5
			spacing = -15
			alpha = 0.7

			using = Animation_ShowHide_Standard

			state = {
				name = a
				next = b
				trigger_on_create = yes
				using = Animation_Curve_Default
				duration = 1.2
				alpha = 0.8
			}

			state = {
				name = b
				next = a
				using = Animation_Curve_Default
				duration = 0.8
				alpha = 0.3
			}

			icon = {
				visible = "[GreaterThan_CFixedPoint(SiegeWindow.GetDailyProgress, '(CFixedPoint)0')]"
				size = { 25 25 }
				texture = "gfx/interface/icons/flat_icons/play.dds"
				using = Animation_ShowHide_Standard

				modify_texture = {
					blend_mode = add
					alpha = 0.7

					block "arrows_color"
					{
						texture = "gfx/interface/hud/speed_indicator_play.dds"
					}
				}
			}

			icon = {
				visible = "[GreaterThan_CFixedPoint(SiegeWindow.GetDailyProgress, '(CFixedPoint)1.5')]"
				size = { 25 25 }
				texture = "gfx/interface/icons/flat_icons/play.dds"

				using = Animation_ShowHide_Standard

				modify_texture = {
					blend_mode = add
					alpha = 0.7

					block "arrows_color"
					{
						texture = "gfx/interface/hud/speed_indicator_play.dds"
					}
				}
			}

			icon = {
				visible = "[GreaterThan_CFixedPoint(SiegeWindow.GetDailyProgress, '(CFixedPoint)3')]"
				size = { 25 25 }
				texture = "gfx/interface/icons/flat_icons/play.dds"

				using = Animation_ShowHide_Standard

				modify_texture = {
					blend_mode = add
					alpha = 0.7

					block "arrows_color"
					{
						texture = "gfx/interface/hud/speed_indicator_play.dds"
					}
				}
			}

			icon = {
				visible = "[GreaterThan_CFixedPoint(SiegeWindow.GetDailyProgress, '(CFixedPoint)5')]"
				size = { 25 25 }
				texture = "gfx/interface/icons/flat_icons/play.dds"

				using = Animation_ShowHide_Standard

				modify_texture = {
					blend_mode = add
					alpha = 0.7

					block "arrows_color"
					{
						texture = "gfx/interface/hud/speed_indicator_play.dds"
					}
				}
			}
		}
	}


	type sounds_siege_window = widget {

		### Disease State 1
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetDiseaseStateFrame, '(int32)1')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_disease"
					soundparam = {
						name = StateChange
						value = 1
					}
				}
			}
		}

		### Disease State 2
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetDiseaseStateFrame, '(int32)2')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_disease"
					soundparam = {
						name = StateChange
						value = 1.5
					}
				}
			}
		}

		### Disease State 3
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetDiseaseStateFrame, '(int32)3')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_disease"
					soundparam = {
						name = StateChange
						value = 2
					}
				}
			}
		}

		### Breach State 1
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetBreachStateFrame, '(int32)1')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_breach"
					soundparam = {
						name = StateChange
						value = 1
					}
				}
			}
		}

		### Breach State 2
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetBreachStateFrame, '(int32)2')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_breach"
					soundparam = {
						name = StateChange
						value = 1.5
					}
				}
			}
		}

		### Breach State 3
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetBreachStateFrame, '(int32)3')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_breach"
					soundparam = {
						name = StateChange
						value = 2
					}
				}
			}
		}

		### Starvation State 1
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetStarvationStateFrame, '(int32)1')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_starvation"
					soundparam = {
						name = StateChange
						value = 1
					}
				}
			}
		}

		### Starvation State 2
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetStarvationStateFrame, '(int32)2')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_starvation"
					soundparam = {
						name = StateChange
						value = 1.5
					}
				}
			}
		}

		### Sarvation State 3
		widget = {
			visible = "[EqualTo_int32( SiegeWindow.GetStarvationStateFrame, '(int32)3')]"
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/War/Siege/Fortstate/sfx_ui_war_siege_fortstate_starvation"
					soundparam = {
						name = StateChange
						value = 2
					}
				}
			}
		}
	}
}

@flame_state_duration = 0.25

template Animation_Frames_100_Modify
{
	state = {
		name = 1
		next = 2
		duration = @flame_state_duration
		trigger_on_create = yes

		modify_texture = {
			name = "fire"
			frame = 1
		}
	}

	state = {
		name = 2
		next = 3
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 2
		}
	}

	state = {
		name = 3
		next = 4
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 3
		}
	}

	state = {
		name = 4
		next = 5
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 4
		}
	}

	state = {
		name = 5
		next = 6
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 5
		}
	}

	state = {
		name = 6
		next = 7
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 6
		}
	}

	state = {
		name = 7
		next = 8
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 7
		}
	}

	state = {
		name = 8
		next = 9
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 8
		}
	}

	state = {
		name = 9
		next = 10
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 9
		}
	}

	state = {
		name = 10
		next = 11
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 10
		}
	}

	state = {
		name = 11
		next = 12
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 11
		}
	}

	state = {
		name = 12
		next = 13
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 12
		}
	}

	state = {
		name = 13
		next = 14
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 13
		}
	}

	state = {
		name = 14
		next = 15
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 14
		}
	}

	state = {
		name = 15
		next = 16
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 15
		}
	}

	state = {
		name = 16
		next = 17
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 16
		}
	}

	state = {
		name = 17
		next = 18
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 17
		}
	}

	state = {
		name = 18
		next = 19
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 18
		}
	}

	state = {
		name = 19
		next = 20
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 19
		}
	}

	state = {
		name = 20
		next = 21
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 20
		}
	}


	state = {
		name = 21
		next = 22
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 21
		}
	}

	state = {
		name = 22
		next = 23
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 22
		}
	}

	state = {
		name = 23
		next = 24
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 23
		}
	}

	state = {
		name = 24
		next = 25
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 24
		}
	}

	state = {
		name = 25
		next = 26
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 25
		}
	}

	state = {
		name = 26
		next = 27
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 26
		}
	}

	state = {
		name = 27
		next = 28
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 27
		}
	}

	state = {
		name = 28
		next = 29
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 28
		}
	}

	state = {
		name = 29
		next = 30
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 29
		}
	}

	state = {
		name = 30
		next = 31
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 30
		}
	}

	state = {
		name = 31
		next = 32
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 31
		}
	}

	state = {
		name = 32
		next = 33
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 32
		}
	}

	state = {
		name = 33
		next = 34
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 33
		}
	}

	state = {
		name = 34
		next = 35
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 34
		}
	}

	state = {
		name = 35
		next = 36
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 35
		}
	}

	state = {
		name = 36
		next = 37
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 36
		}
	}

	state = {
		name = 37
		next = 38
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 37
		}
	}

	state = {
		name = 38
		next = 39
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 38
		}
	}

	state = {
		name = 39
		next = 40
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 39
		}
	}

	state = {
		name = 40
		next = 41
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 40
		}
	}

	state = {
		name = 41
		next = 42
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 41
		}
	}

	state = {
		name = 42
		next = 43
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 42
		}
	}

	state = {
		name = 43
		next = 44
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 43
		}
	}

	state = {
		name = 44
		next = 45
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 44
		}
	}

	state = {
		name = 45
		next = 46
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 45
		}
	}

	state = {
		name = 46
		next = 47
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 46
		}
	}

	state = {
		name = 47
		next = 48
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 47
		}
	}

	state = {
		name = 48
		next = 49
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 48
		}
	}

	state = {
		name = 49
		next = 50
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 49
		}
	}

	state = {
		name = 50
		next = 51
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 50
		}
	}

	state = {
		name = 51
		next = 52
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 51
		}
	}

	state = {
		name = 52
		next = 53
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 52
		}
	}

	state = {
		name = 53
		next = 54
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 53
		}
	}

	state = {
		name = 54
		next = 55
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 54
		}
	}

	state = {
		name = 55
		next = 56
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 55
		}
	}

	state = {
		name = 56
		next = 57
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 56
		}
	}

	state = {
		name = 57
		next = 58
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 57
		}
	}

	state = {
		name = 58
		next = 59
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 58
		}
	}

	state = {
		name = 59
		next = 60
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 59
		}
	}

	state = {
		name = 60
		next = 61
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 60
		}
	}

	state = {
		name = 61
		next = 62
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 61
		}
	}

	state = {
		name = 62
		next = 63
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 62
		}
	}

	state = {
		name = 63
		next = 64
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 63
		}
	}

	state = {
		name = 64
		next = 65
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 64
		}
	}

	state = {
		name = 65
		next = 66
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 65
		}
	}

	state = {
		name = 66
		next = 67
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 66
		}
	}

	state = {
		name = 67
		next = 68
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 67
		}
	}

	state = {
		name = 68
		next = 69
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 68
		}
	}

	state = {
		name = 69
		next = 70
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 69
		}
	}

	state = {
		name = 70
		next = 71
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 70
		}
	}

	state = {
		name = 71
		next = 72
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 71
		}
	}

	state = {
		name = 72
		next = 73
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 72
		}
	}

	state = {
		name = 73
		next = 74
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 73
		}
	}

	state = {
		name = 74
		next = 75
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 74
		}
	}

	state = {
		name = 75
		next = 76
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 75
		}
	}

	state = {
		name = 76
		next = 77
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 76
		}
	}

	state = {
		name = 77
		next = 78
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 77
		}
	}

	state = {
		name = 78
		next = 79
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 78
		}
	}

	state = {
		name = 79
		next = 80
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 79
		}
	}

	state = {
		name = 80
		next = 81
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 80
		}
	}

	state = {
		name = 81
		next = 82
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 81
		}
	}

	state = {
		name = 82
		next = 83
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 82
		}
	}

	state = {
		name = 83
		next = 84
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 83
		}
	}

	state = {
		name = 84
		next = 85
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 84
		}
	}

	state = {
		name = 85
		next = 86
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 85
		}
	}

	state = {
		name = 86
		next = 87
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 86
		}
	}

	state = {
		name = 87
		next = 88
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 87
		}
	}

	state = {
		name = 88
		next = 89
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 88
		}
	}

	state = {
		name = 89
		next = 90
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 89
		}
	}

	state = {
		name = 90
		next = 1
		duration = @flame_state_duration

		modify_texture = {
			name = "fire"
			frame = 90
		}
	}
}

template Animation_Frames_100
{
	state = {
		name = 1
		next = 2
		duration = @flame_state_duration
		trigger_on_create = yes
		frame = 1

	}

	state = {
		name = 2
		next = 3
		duration = @flame_state_duration
		frame = 2
	}

	state = {
		name = 3
		next = 4
		duration = @flame_state_duration
		frame = 3
	}

	state = {
		name = 4
		next = 5
		duration = @flame_state_duration
		frame = 4
	}

	state = {
		name = 5
		next = 6
		duration = @flame_state_duration
		frame = 5
	}

	state = {
		name = 6
		next = 7
		duration = @flame_state_duration
		frame = 6
	}

	state = {
		name = 7
		next = 8
		duration = @flame_state_duration
		frame = 7
	}

	state = {
		name = 8
		next = 9
		duration = @flame_state_duration
		frame = 8
	}

	state = {
		name = 9
		next = 10
		duration = @flame_state_duration
		frame = 9
	}

	state = {
		name = 10
		next = 11
		duration = @flame_state_duration
		frame = 10
	}

	state = {
		name = 11
		next = 12
		duration = @flame_state_duration
		frame = 11
	}

	state = {
		name = 12
		next = 13
		duration = @flame_state_duration
		frame = 12
	}

	state = {
		name = 13
		next = 14
		duration = @flame_state_duration
		frame = 13
	}

	state = {
		name = 14
		next = 15
		duration = @flame_state_duration
		frame = 14
	}

	state = {
		name = 15
		next = 16
		duration = @flame_state_duration
		frame = 15
	}

	state = {
		name = 16
		next = 17
		duration = @flame_state_duration
		frame = 16
	}

	state = {
		name = 17
		next = 18
		duration = @flame_state_duration
		frame = 17
	}

	state = {
		name = 18
		next = 19
		duration = @flame_state_duration
		frame = 18
	}

	state = {
		name = 19
		next = 20
		duration = @flame_state_duration
		frame = 19
	}

	state = {
		name = 20
		next = 21
		duration = @flame_state_duration
		frame = 20
	}


	state = {
		name = 21
		next = 22
		duration = @flame_state_duration
		frame = 21
	}

	state = {
		name = 22
		next = 23
		duration = @flame_state_duration
		frame = 22

	}

	state = {
		name = 23
		next = 24
		duration = @flame_state_duration
		frame = 23
	}

	state = {
		name = 24
		next = 25
		duration = @flame_state_duration
		frame = 24
	}

	state = {
		name = 25
		next = 26
		duration = @flame_state_duration
		frame = 25
	}

	state = {
		name = 26
		next = 27
		duration = @flame_state_duration
		frame = 26
	}

	state = {
		name = 27
		next = 28
		duration = @flame_state_duration
		frame = 27
	}

	state = {
		name = 28
		next = 29
		duration = @flame_state_duration
		frame = 28
	}

	state = {
		name = 29
		next = 30
		duration = @flame_state_duration
		frame = 29
	}

	state = {
		name = 30
		next = 31
		duration = @flame_state_duration
		frame = 30
	}

	state = {
		name = 31
		next = 32
		duration = @flame_state_duration
		frame = 31
	}

	state = {
		name = 32
		next = 33
		duration = @flame_state_duration
		frame = 32
	}

	state = {
		name = 33
		next = 34
		duration = @flame_state_duration
		frame = 33
	}

	state = {
		name = 34
		next = 35
		duration = @flame_state_duration
		frame = 34
	}

	state = {
		name = 35
		next = 36
		duration = @flame_state_duration
		frame = 35
	}

	state = {
		name = 36
		next = 37
		duration = @flame_state_duration
		frame = 36
	}

	state = {
		name = 37
		next = 38
		duration = @flame_state_duration
		frame = 37
	}

	state = {
		name = 38
		next = 39
		duration = @flame_state_duration
		frame = 38
	}

	state = {
		name = 39
		next = 40
		duration = @flame_state_duration
		frame = 39
	}

	state = {
		name = 40
		next = 41
		duration = @flame_state_duration
		frame = 40
	}

	state = {
		name = 41
		next = 42
		duration = @flame_state_duration
		frame = 41
	}

	state = {
		name = 42
		next = 43
		duration = @flame_state_duration
		frame = 42
	}

	state = {
		name = 43
		next = 44
		duration = @flame_state_duration
		frame = 43
	}

	state = {
		name = 44
		next = 45
		duration = @flame_state_duration
		frame = 44
	}

	state = {
		name = 45
		next = 46
		duration = @flame_state_duration
		frame = 45
	}

	state = {
		name = 46
		next = 47
		duration = @flame_state_duration
		frame = 46
	}

	state = {
		name = 47
		next = 48
		duration = @flame_state_duration
		frame = 47
	}

	state = {
		name = 48
		next = 49
		duration = @flame_state_duration
		frame = 48
	}

	state = {
		name = 49
		next = 50
		duration = @flame_state_duration
		frame = 49
	}

	state = {
		name = 50
		next = 51
		duration = @flame_state_duration
		frame = 50
	}

	state = {
		name = 51
		next = 52
		duration = @flame_state_duration
		frame = 51
	}

	state = {
		name = 52
		next = 53
		duration = @flame_state_duration
		frame = 52
	}

	state = {
		name = 53
		next = 54
		duration = @flame_state_duration
		frame = 53
	}

	state = {
		name = 54
		next = 55
		duration = @flame_state_duration
		frame = 54
	}

	state = {
		name = 55
		next = 56
		duration = @flame_state_duration
		frame = 55
	}

	state = {
		name = 56
		next = 57
		duration = @flame_state_duration
		frame = 56
	}

	state = {
		name = 57
		next = 58
		duration = @flame_state_duration
		frame = 57
	}

	state = {
		name = 58
		next = 59
		duration = @flame_state_duration
		frame = 58
	}

	state = {
		name = 59
		next = 60
		duration = @flame_state_duration
		frame = 59
	}

	state = {
		name = 60
		next = 61
		duration = @flame_state_duration
		frame = 60
	}

	state = {
		name = 61
		next = 62
		duration = @flame_state_duration
		frame = 61
	}

	state = {
		name = 62
		next = 63
		duration = @flame_state_duration
		frame = 62
	}

	state = {
		name = 63
		next = 64
		duration = @flame_state_duration
		frame = 63
	}

	state = {
		name = 64
		next = 65
		duration = @flame_state_duration
		frame = 64
	}

	state = {
		name = 65
		next = 66
		duration = @flame_state_duration
		frame = 65
	}

	state = {
		name = 66
		next = 67
		duration = @flame_state_duration
		frame = 66
	}

	state = {
		name = 67
		next = 68
		duration = @flame_state_duration
		frame = 67
	}

	state = {
		name = 68
		next = 69
		duration = @flame_state_duration
		frame = 68
	}

	state = {
		name = 69
		next = 70
		duration = @flame_state_duration
		frame = 69
	}

	state = {
		name = 70
		next = 71
		duration = @flame_state_duration
		frame = 70
	}

	state = {
		name = 71
		next = 72
		duration = @flame_state_duration
		frame = 71
	}

	state = {
		name = 72
		next = 73
		duration = @flame_state_duration
		frame = 72
	}

	state = {
		name = 73
		next = 74
		duration = @flame_state_duration
		frame = 73
	}

	state = {
		name = 74
		next = 75
		duration = @flame_state_duration
		frame = 74
	}

	state = {
		name = 75
		next = 76
		duration = @flame_state_duration
		frame = 75
	}

	state = {
		name = 76
		next = 77
		duration = @flame_state_duration
		frame = 76
	}

	state = {
		name = 77
		next = 78
		duration = @flame_state_duration
		frame = 77
	}

	state = {
		name = 78
		next = 79
		duration = @flame_state_duration
		frame = 78
	}

	state = {
		name = 79
		next = 80
		duration = @flame_state_duration
		frame = 79
	}

	state = {
		name = 80
		next = 81
		duration = @flame_state_duration
		frame = 80
	}

	state = {
		name = 81
		next = 82
		duration = @flame_state_duration
		frame = 81
	}

	state = {
		name = 82
		next = 83
		duration = @flame_state_duration
		frame = 82
	}

	state = {
		name = 83
		next = 84
		duration = @flame_state_duration
		frame = 83
	}

	state = {
		name = 84
		next = 85
		duration = @flame_state_duration
		frame = 84
	}

	state = {
		name = 85
		next = 86
		duration = @flame_state_duration
		frame = 85
	}

	state = {
		name = 86
		next = 87
		duration = @flame_state_duration
		frame = 86
	}

	state = {
		name = 87
		next = 88
		duration = @flame_state_duration
		frame = 87
	}

	state = {
		name = 88
		next = 89
		duration = @flame_state_duration
		frame = 88
	}

	state = {
		name = 89
		next = 90
		duration = @flame_state_duration
		frame = 89
	}

	state = {
		name = 90
		next = 1
		duration = @flame_state_duration
		frame = 90
	}
}
