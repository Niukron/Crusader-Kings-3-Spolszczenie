
#v1.5 - original
education_focus = {
	type = character

	text = {
		localization_key = education_learning_loc
		trigger = {
			has_trait = education_learning
		}
	}
	text = {
		localization_key = education_stewardship_loc
		trigger = {
			has_trait = education_stewardship
		}
	}
	text = {
		localization_key = education_martial_loc
		trigger = {
			has_trait = education_martial
		}
	}
	text = {
		localization_key = education_intrigue_loc
		trigger = {
			has_trait = education_intrigue
		}
	}
	text = {
		localization_key = education_diplomacy_loc
		trigger = {
			has_trait = education_diplomacy
		}
	}
}

#v1.5
education_focus_acc = {
	parent = education_focus
	suffix = "_acc"
}

#v1.5
education_focus_ins = {
	parent = education_focus
	suffix = "_ins"
}

#v1.5
education_focus_gen = {
	parent = education_focus
	suffix = "_gen"
}

#v1.5
RandomWeirdObject = {

	type = character

	random_valid = yes

	text = {
		localization_key = turnip_shaped_like_me
	}
	text = {
		localization_key = human_skull_cup
	}
	text = {
		localization_key = copper_scroll
	}
	text = {
		localization_key = abandoned_chess_piece
	}
	text = {
		localization_key = ancient_salted_beef
	}
	text = {
		localization_key = cracked_ostrich_eggshell
	}
	text = {
		localization_key = bat_guano
	}
	text = {
		localization_key = abandoned_list
	}
}

#v1.5
RandomWeirdObject_dative = {
	parent = RandomWeirdObject
	suffix = "_dative"
}

#v1.5 - original
GetInspirationTypeRoom = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_room_study
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weapon_inspiration }
		}
		localization_key = inspiration_type_room_smithy
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = armor_inspiration }
		}
		localization_key = inspiration_type_room_armory
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_room_weavery
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_room_wagon
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_room_workshop
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_room_shop
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_room_laboratory
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_room_fallback
	}
}

#v1.5
GetInspirationTypeRoom_gen = {
	parent = GetInspirationTypeRoom
	suffix = "_gen"
}

#v1.7 - original
GetInspirationTypeStation = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_station_desk
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_bellows
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_anvil
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_forge
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_station_loom
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_station_maps
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_station_bench
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_station_cauldron
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_station_alembic
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = research_inspiration }
		}
		localization_key = inspiration_type_station_library
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_station_fallback
	}
}

#v1.7
GetInspirationTypeStation_acc = {
	parent = GetInspirationTypeStation
	suffix = "_acc"
}

#v1.5 - original
OppositeGenderedLowlyServantType = {
	type = character
	random_valid = yes

	text = {
		localization_key = stable_boy
		trigger = {
			is_female = yes
		}
	}
	text = {
		localization_key = page
		trigger = {
			is_female = yes
		}
	}
	text = {
		localization_key = scullery_maid
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = chandler
		trigger = {
			is_female = yes
		}
	}
	text = {
		localization_key = launderer
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = scullion
		trigger = {
			is_female = yes
		}
	}
	text = {
		localization_key = naperer
	}
	text = {
		localization_key = scalder
	}
	text = {
		localization_key = saucerer
	}
	text = {
		localization_key = pantler
	}

	text = {
		weight_multiplier = {
			base = 0.3
		}
		localization_key = servant
	}
}

#v1.5
OppositeGenderedLowlyServantType_truly_opp = {
	parent = OppositeGenderedLowlyServantType
	suffix = "_truly_opp"
}

#v1.5 - original
education_focus_child = {
	type = character

	text = {
		localization_key = education_learning_loc
		trigger = {
			exists = var:education_learning_variable
		}
	}
	text = {
		localization_key = education_stewardship_loc
		trigger = {
			exists = var:education_stewardship_variable
		}
	}
	text = {
		localization_key = education_martial_loc
		trigger = {
			exists = var:education_martial_variable
		}
	}
	text = {
		localization_key = education_intrigue_loc
		trigger = {
			exists = var:education_intrigue_variable
		}
	}
	text = {
		localization_key = education_diplomacy_loc
		trigger = {
			exists = var:education_diplomacy_variable
		}
	}
}

#v1.5
education_focus_child_ins = {
	parent = education_focus_child
	suffix = "_ins"
}

#v1.5
education_focus_child_acc = {
	parent = education_focus_child
	suffix = "_acc"
}

#v1.5
education_focus_child_gen = {
	parent = education_focus_child
	suffix = "_gen"
}


#v1.6.1
religion_name_adj_feminine_accusative = {
	type = faith
	text = {
		trigger = {
			religion_tag = christianity_religion
		}
		localization_key = christianity_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = north_african_religion
		}
		localization_key = north_african_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = baltic_religion
		}
		localization_key = baltic_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = akom_religion
		}
		localization_key = akom_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = bon_religion
		}
		localization_key = bon_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = buddhism_religion
		}
		localization_key = buddhism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = tani_religion
		}
		localization_key = tani_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = dualism_religion
		}
		localization_key = dualism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = finno_ugric_religion
		}
		localization_key = finno_ugric_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = germanic_religion
		}
		localization_key = germanic_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = hellenism_religion
		}
		localization_key = hellenism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = hinduism_religion
		}
		localization_key = hinduism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = islam_religion
		}
		localization_key = islam_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = jainism_religion
		}
		localization_key = jainism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = judaism_religion
		}
		localization_key = judaism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = kushitism_religion
		}
		localization_key = kushitism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = magyar_religion
		}
		localization_key = magyar_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = mundhum_religion
		}
		localization_key = mundhum_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = paganism_religion
		}
		localization_key = paganism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = qiangic_religion
		}
		localization_key = qiangic_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = slavic_religion
		}
		localization_key = slavic_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = taoism_religion
		}
		localization_key = taoism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = tengrism_religion
		}
		localization_key = tengrism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = waaqism_religion
		}
		localization_key = waaqism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = west_african_religion
		}
		localization_key = west_african_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = west_african_bori_religion
		}
		localization_key = west_african_bori_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = west_african_orisha_religion
		}
		localization_key = west_african_orisha_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = west_african_roog_religion
		}
		localization_key = west_african_roog_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = yazidi_religion
		}
		localization_key = yazidi_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = zoroastrianism_religion
		}
		localization_key = zoroastrianism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = zunism_religion
		}
		localization_key = zunism_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = siberian_religion
		}
		localization_key = siberian_religion_adj_feminine_accusative
	}
	text = {
		trigger = {
			religion_tag = basque_religion
		}
		localization_key = basque_religion_adj_feminine_accusative
	}
	text = {
		localization_key = religion_name_adj_feminine_fallback
		fallback = yes
	}
}

#v1.6.1
religion_name_adj_masculine_ins = {
	type = faith
	text = {
		trigger = {
			religion_tag = christianity_religion
		}
		localization_key = christianity_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = north_african_religion
		}
		localization_key = north_african_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = baltic_religion
		}
		localization_key = baltic_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = akom_religion
		}
		localization_key = akom_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = bon_religion
		}
		localization_key = bon_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = buddhism_religion
		}
		localization_key = buddhism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = tani_religion
		}
		localization_key = tani_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = dualism_religion
		}
		localization_key = dualism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = finno_ugric_religion
		}
		localization_key = finno_ugric_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = germanic_religion
		}
		localization_key = germanic_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = hellenism_religion
		}
		localization_key = hellenism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = hinduism_religion
		}
		localization_key = hinduism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = islam_religion
		}
		localization_key = islam_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = jainism_religion
		}
		localization_key = jainism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = judaism_religion
		}
		localization_key = judaism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = kushitism_religion
		}
		localization_key = kushitism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = magyar_religion
		}
		localization_key = magyar_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = mundhum_religion
		}
		localization_key = mundhum_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = paganism_religion
		}
		localization_key = paganism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = qiangic_religion
		}
		localization_key = qiangic_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = slavic_religion
		}
		localization_key = slavic_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = taoism_religion
		}
		localization_key = taoism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = tengrism_religion
		}
		localization_key = tengrism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = waaqism_religion
		}
		localization_key = waaqism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = west_african_religion
		}
		localization_key = west_african_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = west_african_bori_religion
		}
		localization_key = west_african_bori_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = west_african_orisha_religion
		}
		localization_key = west_african_orisha_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = west_african_roog_religion
		}
		localization_key = west_african_roog_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = yazidi_religion
		}
		localization_key = yazidi_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = zoroastrianism_religion
		}
		localization_key = zoroastrianism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = zunism_religion
		}
		localization_key = zunism_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = siberian_religion
		}
		localization_key = siberian_religion_adj_masculine_ins
	}
	text = {
		trigger = {
			religion_tag = basque_religion
		}
		localization_key = basque_religion_adj_masculine_ins
	}
	text = {
		localization_key = religion_name_adj_feminine_fallback
		fallback = yes
	}
}


#v1.5 - original
TwinDaughtersSonsChildren = {
	type = character

	text = {
		trigger = {
			is_female = yes
			any_sibling = {
				is_twin_of = prev
				is_female = yes
			}
		}
		localization_key = relation_daughters
	}
	text = {
		trigger = {
			is_male = yes
			any_sibling = {
				is_twin_of = prev
				is_male = yes
			}
		}
		localization_key = relation_sons
	}
	text = {
		trigger = {
			any_sibling = {
				is_twin_of = prev
				sex_opposite_of = prev
			}
		}
		localization_key = relation_children
	}
}

#v1.5
TwinDaughtersSonsChildrenNum = {
	parent = TwinDaughtersSonsChildren
	suffix = "_num"
}

#v1.5
TwinDaughtersSonsChildrenAblative = {
	parent = TwinDaughtersSonsChildren
	suffix = "_abl"
}

#v1.5
TwinDaughtersSonsChildrenAccusative = {
	parent = TwinDaughtersSonsChildren
	suffix = "_acc"
}


#v1.5
TitleRankAdjConcept = {
    type = landed_title

	text = {
		trigger = {			
			tier = tier_barony
		}
		
		localization_key = game_concept_barony_pos
	}

	text = {
		trigger = {			
			tier = tier_county
		}
		
		localization_key = game_concept_county_pos
	}

	text = {
		trigger = {			
			tier = tier_duchy
		}
		
		localization_key = game_concept_duchy_pos
	}

	text = {
		trigger = {			
			tier = tier_kingdom
		}
		
		localization_key = game_concept_kingdom_pos
	}

	text = {
		trigger = {			
			tier = tier_empire
		}
		
		localization_key = game_concept_empire_pos
	}
}


# -------------------------- Title Adj -------------------------- #

TitleAdjBase = {

	type = landed_title

	text = {
		trigger = {	
			OR = {
				is_mercenary_company = yes
				is_holy_order = yes
				is_titular = yes
			}		
		}
		
		#localization_key = title_notier_notooltip
		localization_key = PL_title_adj_notier
	}
	
	text = {
		trigger = {			
			OR = {
				this = title:k_east_francia
				this = title:k_france
			}
		}
		
		#localization_key = title_francia_notooltip
		localization_key = PL_title_adj_francia
	}

	text = {

		trigger = {
			tier > tier_barony
			NOR = { 

					this = title:d_ismaili
					this = title:d_nizari
					this = title:d_zayidi
					this = title:d_ghulat
					this = title:k_papal_state
					this = title:k_orthodox
					this = title:d_iconoclast
					this = title:d_patriarchate_in_the_east
					this = title:d_coptic_papacy
					this = title:d_apostolic_church
					this = title:d_conversos
					this = title:d_manichean
					this = title:d_sunni
					this = title:d_shiite
					this = title:d_imami
					this = title:d_masmudi
					this = title:d_muwalladi
					this = title:e_golden_horde
					this = title:e_ilkhanate
					#this = title:e_chagatai
					this = title:e_black_horde
					this = title:e_white_horde
					this = title:e_aarlud_khanate
					this = title:e_togskol_khanate
					this = title:e_baruun_khanate	
					this = title:e_uyghur_khanate
					this = title:e_kirghiz_khanate
					this = title:e_mongol_empire
					this = title:e_timurids
					#this = title:d_rabbinism
					this = title:d_karaism
					this = title:d_haymanot
					this = title:d_malabarism
					this = title:d_samaritan
					this = title:d_kabarism
					this = title:d_mazdayasna
					this = title:d_zurvanism
					this = title:d_gayomarthianism
					this = title:d_khurmazta
					this = title:d_mazdakism
					this = title:d_khurramism
					this = title:d_urartuism
					this = title:k_sakya_trizin
					this = title:k_switzerland
					this = title:k_visigoths
					this = title:e_latin_empire
					this = title:e_north_sea
					this = title:d_yungdrung_bon
					this = title:e_hre
					this = title:d_western_isles
					this = title:e_roman_empire
					this = title:e_byzantium
					this = title:k_armenian_principality
					this = title:d_northern_isles
					this = title:e_wendish_empire
					this = title:e_west_slavia
					this = title:d_cherven_cities
					this = title:k_magyar
					this = title:e_persia
					this = title:e_arabia
					this = title:e_bengal
					this = title:e_deccan
					this = title:c_maldives


			}
		}

		#localization_key = title_adj_all_notooltip
		localization_key = PL_title_adj
	}

	text = {

		#localization_key = title_adj_fallback_notooltip
		localization_key = PL_title_adj_fallback
		fallback = yes

	}


}

TitleAdjBase2 = {

	type = landed_title

	text = {
		#localization_key = title_adj_all_notier_notooltip
		localization_key = PL_title_adj_all_notier
	}

}

# NoTooltip
TitleAdjNoTooltip = {
	parent = TitleAdjBase
	suffix = "_notooltip"
}

TitleAdjNoTierNoTooltip = {
	parent = TitleAdjBase2
	suffix = "_notooltip"
}

TitleAdjRealmAdjNoTierNoTooltip = {
	parent = TitleAdjBase2
	suffix = "_realm_notooltip"
}



# Tooltip
TitleAdj = {
	parent = TitleAdjBase
	suffix = "_tooltip"
}

TitleAdjNoTier = {
	parent = TitleAdjBase2
	suffix = "_tooltip"
}

TitleAdjRealmAdjNoTier = {
	parent = TitleAdjBase2
	suffix = "_realm_tooltip"
}


# -------------------------- Title Adj -------------------------- #
# v1.5
RealmTierType = {
	type = character

	text = {
		trigger = {
			primary_title.tier = tier_barony
		}
		localization_key = cv_realm_gov_type_barony
	}
	
	text = {
		trigger = {
			is_alive = no
		}
		localization_key = cv_realm_gov_type_dead
	}

    text = {
		fallback = yes
		localization_key = cv_realm_gov_type
	}

}

# v1.5 - w oknie hrabstwa
HoldingTypeYourAdj = {
	type = province

	text = {
		trigger = {
			has_holding = no
		}
		localization_key = HOLDING_EMPTY
	}

	text = {
		trigger = {
			has_holding_type = castle_holding
		}
		localization_key = castle_holding_concept_your_adj
	}

	text = {
		trigger = {
			has_holding_type = city_holding
		}
		localization_key = city_holding_concept_your_adj
	}

	text = {
		trigger = {
			has_holding_type = church_holding
		}
		localization_key = church_holding_concept_your_adj
	}

	text = {
		trigger = {
			has_holding_type = tribal_holding
		}
		localization_key = tribal_holding_concept_your_adj
	}

    text = {
		fallback = yes
		localization_key = holding_fallback_concept_your_adj
	}

}

# v1.5
HoldingTypeAdj = {
	type = province

	text = {
		trigger = {
			has_holding = no
		}
		localization_key = HOLDING_EMPTY
	}

	text = {
		trigger = {
			has_holding_type = castle_holding
		}
		localization_key = castle_holding_concept_adj
	}

	text = {
		trigger = {
			has_holding_type = city_holding
		}
		localization_key = city_holding_concept_adj
	}

	text = {
		trigger = {
			has_holding_type = church_holding
		}
		localization_key = church_holding_concept_adj
	}

	text = {
		trigger = {
			has_holding_type = tribal_holding
		}
		localization_key = tribal_holding_concept_adj
	}

    text = {
		fallback = yes
		localization_key = holding_fallback_concept_adj
	}

}

GetShockedExpressionFemale = {
	type = character

	random_valid = yes

	text = {
		localization_key = shocked_expression_shocked_female
	}
	text = {
		localization_key = shocked_expression_appalled_female
	}
}

# ------------------------------------------------------------------------------------

# v1.5 - original
prison_pet = {
	type = character

	text = {
		trigger = {
			OR = {
				AND = {
					exists = var:prison_pet_variable
					var:prison_pet_variable = flag:rat
				}
				NOT = { exists = var:prison_pet_variable }
			}
		}
		localization_key = prison_pet_rat
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = var:prison_pet_variable
					var:prison_pet_variable = flag:stone
				}
				NOT = { exists = var:prison_pet_variable }
			}
		}
		localization_key = prison_pet_stone
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = var:prison_pet_variable
					var:prison_pet_variable = flag:spoon
				}
				NOT = { exists = var:prison_pet_variable }
			}
		}
		localization_key = prison_pet_spoon
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = var:prison_pet_variable
					var:prison_pet_variable = flag:cockroach
				}
				NOT = { exists = var:prison_pet_variable }
			}
		}
		localization_key = prison_pet_cockroach
	}
}

# v1.5
my_prison_pet = {
	parent = prison_pet
	suffix = "_my"
}

# v1.5
little_prison_pet_vocative = {
	parent = prison_pet
	suffix = "_little_vocative"
}

# ------------------------------------------------------------------------------------

# v1.5
exotic_fowl_type_genitive_plural = {
	type = character

	text = {
		localization_key = fowl_dinner_peacock_genitive_plural
		trigger = {
			age > 14
		}
	}
	
	text = {
		localization_key = fowl_dinner_child_genitive_plural
		trigger = {
			age < 15
		}
	}
}

# v1.10
GruesomeFestivalNameMsc = {
	type = character

	text = {
		localization_key = gruesomefestivalname_blot
		trigger = { faith.religion = religion:germanic_religion }
	}

	text = {
		localization_key = gruesomefestivalname_festival
		trigger = {
			NOT = { faith.religion = religion:germanic_religion }
		}
		fallback = yes
	}
}

# v1.5
RealmTypeGenitive = {
	type = character

	text = {
		localization_key = kingdom_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 4
		}
	}

	text = {
		localization_key = duchy_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 3
		}
	}

	text = {
		localization_key = county_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 2
		}
	}

	text = {
		localization_key = barony_genitive_lower_case
		trigger = {
			highest_held_title_tier >= 1
		}
	}
}

# v1.5 - original
BaronyTownType = {
	type = landed_title

	text = {
		trigger = {
			title_province = {
				county = {
					development_level > medium_development_level
				}
			}
		}
		localization_key = barony_town_type_city
	}

	text = {
		trigger = {
			title_province = {
				fort_level > 0
			}
		}
		localization_key = barony_town_type_castle_town
	}

	text = {
		trigger = {
			title_province = {
				county = {
					development_level <= medium_development_level
					development_level >= bad_development_level
				}
			}
		}
		localization_key = barony_town_type_town
	}

	text = {
		trigger = {
			title_province = {
				county = {
					development_level < bad_development_level
				}
			}
		}
		localization_key = barony_town_type_village
	}
}

# v1.5
BaronyTownTypeLocative = {
	parent = BaronyTownType
	suffix = "_locative"
}

# v1.5
BaronyTownTypeGenitive = {
	parent = BaronyTownType
	suffix = "_genitive"
}

# v1.9.0.2 - original
IndefiniteBodyOfWater = { #Lake, River, Oasis, etc.
	type = character
	random_valid = yes

	text = {
		trigger = {
			location = { terrain = oasis }
		}
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = {
			location = { is_coastal = yes }
		}
		localization_key = body_of_water_the_ocean
	}
	text = {
		trigger = {
			location = { is_riverside_province = yes }
		}
		localization_key = body_of_water_a_river
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = farmlands
					terrain = jungle
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = floodplains
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = hills
					terrain = forest
					terrain = taiga
					terrain = steppe
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

# v1.9.0.2
IndefiniteBodyOfWaterGenitive = {
	parent = IndefiniteBodyOfWater
	suffix = "_genitive"
}

# v1.5
diplomacy_skill_level_genitive = {
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { diplomacy < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			diplomacy >= terrible_skill_level
			diplomacy < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			diplomacy >= average_skill_level
			diplomacy < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			diplomacy >= good_skill_level
			diplomacy < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { diplomacy >= excellent_skill_level }
	}
}

# v1.5
martial_skill_level_genitive = {
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { martial < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			martial >= terrible_skill_level
			martial < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			martial >= average_skill_level
			martial < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			martial >= good_skill_level
			martial < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { martial >= excellent_skill_level }
	}
}

# v1.5
stewardship_skill_level_genitive = {
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { stewardship < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			stewardship >= terrible_skill_level
			stewardship < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			stewardship >= average_skill_level
			stewardship < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			stewardship >= good_skill_level
			stewardship < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { stewardship >= excellent_skill_level }
	}
}

# v1.5
intrigue_skill_level_genitive = {
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { intrigue < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			intrigue >= terrible_skill_level
			intrigue < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			intrigue >= average_skill_level
			intrigue < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			intrigue >= good_skill_level
			intrigue < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { intrigue >= excellent_skill_level }
	}
}

# v1.5
learning_skill_level_genitive = {
	type = character

	text = {
		localization_key = skill_level_terrible_genitive
		trigger = { learning < terrible_skill_level }
	}

	text = {
		localization_key = skill_level_poor_genitive
		trigger = {
			learning >= terrible_skill_level
			learning < average_skill_level
		}
	}

	text = {
		localization_key = skill_level_average_genitive
		trigger = {
			learning >= average_skill_level
			learning < good_skill_level
		}
	}

	text = {
		localization_key = skill_level_good_genitive
		trigger = {
			learning >= good_skill_level
			learning < excellent_skill_level
		}
	}

	text = {
		localization_key = skill_level_excellent_genitive
		trigger = { learning >= excellent_skill_level }
	}
}

# v1.5
CompositionTypeGloriousAccusative = {
	type = character

	text = {
		trigger = { var:composition_type = flag:song }
		localization_key = CompositionType_song_glorious_accusative
	}
	text = {
		trigger = { var:composition_type = flag:chronicle }
		localization_key = CompositionType_chronicle_glorious_accusative
	}
	text = {
		trigger = { var:composition_type = flag:poem }
		localization_key = CompositionType_poem_glorious_accusative
	}
}

# v1.5
ComplimentAdjectiveTheMostGenitive = {
	type = character

	random_valid = yes

	# Fair/Handsome
	text = {
		trigger = {
			has_trait = beauty_good
			is_male = yes
			NOT = {
				has_variable = court_6040_best_looking_var	#needed to keep court.6040 loc coherent
			}
		}
		localization_key = compliment_handsome_the_most_genitive
	}
	text = {
		trigger = {
			has_trait = beauty_good
			is_female = yes
			NOT = {
				has_variable = court_6040_best_looking_var	#needed to keep court.6040 loc coherent
			}
		}
		localization_key = compliment_fair_the_most_genitive
	}

	# Impressive
	text = {
		trigger = {
			has_personality_malicious_trigger = yes
			is_female = yes
		}
		localization_key = compliment_impressive_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_malicious_trigger = yes
			is_male = yes
		}
		localization_key = compliment_impressive_the_most_genitive
	}

	# Benign
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_female = yes
		}
		localization_key = compliment_benign_female_the_most_genitive
	}
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_male = yes
		}
		localization_key = compliment_benign_the_most_genitive
	}

	# Benevolent
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_female = yes
		}
		localization_key = compliment_benevolent_female_the_most_genitive
	}
	text = {
		trigger = {
			ai_compassion >= medium_positive_ai_value
			is_male = yes
		}
		localization_key = compliment_benevolent_the_most_genitive
	}

	# Implacable
	text = {
		trigger = {
			has_personality_dominant_trigger = yes
			is_female = yes
		}
		localization_key = compliment_implacable_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_dominant_trigger = yes
			is_male = yes
		}
		localization_key = compliment_implacable_the_most_genitive
	}

	# Modest
	text = {
		trigger = {
			has_personality_submissive_trigger = yes
			is_female = yes
		}
		localization_key = compliment_modest_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_submissive_trigger = yes
			is_male = yes
		}
		localization_key = compliment_modest_the_most_genitive
	}

	# Charming
	text = {
		trigger = {
			has_personality_extroverted_trigger = yes
			is_female = yes
		}
		localization_key = compliment_charming_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_extroverted_trigger = yes
			is_male = yes
		}
		localization_key = compliment_charming_the_most_genitive
	}


	# Thoughtful
	text = {
		trigger = {
			has_personality_introverted_trigger = yes
			is_female = yes
		}
		localization_key = compliment_thoughtful_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_introverted_trigger = yes
			is_male = yes
		}
		localization_key = compliment_thoughtful_the_most_genitive
	}

	# Perceptive
	text = {
		trigger = {
			has_personality_emotional_trigger = yes
			is_female = yes
		}
		localization_key = compliment_perceptive_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_emotional_trigger = yes
			is_male = yes
		}
		localization_key = compliment_perceptive_the_most_genitive
	}

	# Sensible
	text = {
		trigger = {
			has_personality_levelheaded_trigger = yes
			is_female = yes
		}
		localization_key = compliment_sensible_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_levelheaded_trigger = yes
			is_male = yes
		}
		localization_key = compliment_sensible_the_most_genitive
	}

	# Serene
	text = {
		trigger = {
			has_personality_annoying_trigger = yes
			is_female = yes
		}
		localization_key = compliment_serene_female_the_most_genitive
	}
	text = {
		trigger = {
			has_personality_annoying_trigger = yes
			is_male = yes
		}
		localization_key = compliment_serene_the_most_genitive
	}

	# Fallback
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = compliment_fallback_the_most_genitive
	}
}

# v1.5
RegionalGameObjectAccusative = {
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards_accusative
	}

	text = {
		trigger = {
			exists = capital_province
			capital_province = {
				geographical_region = world_india
			}
		}
		localization_key = pachisi_board_accusative #indian
	}

	text = {
		localization_key = chess_set_accusative
	}
}

# v1.7.2 - original
child_favorite_toy = {
	type = character

	random_valid = yes

	text = {
		localization_key = wooden_knight
		trigger = { var:child_toy_variable = flag:wooden_knight }
	}
	text = {
		localization_key = toy_boat
		trigger = { var:child_toy_variable = flag:toy_boat }
	}
	text = {
		localization_key = wooden_sword
		trigger = { var:child_toy_variable = flag:wooden_sword }
	}
	text = {
		localization_key = ragdoll
		trigger = { var:child_toy_variable = flag:ragdoll }
	}
	text = {
		localization_key = spinning_top
		trigger = { var:child_toy_variable = flag:spinning_top }
	}
	text = {
		localization_key = rolling_hoop
		trigger = { var:child_toy_variable = flag:rolling_hoop }
	}
	text = {
		localization_key = scopperel
		trigger = { var:child_toy_variable = flag:scopperel }
	}
	text = {
		localization_key = wooden_horse
		trigger = { var:child_toy_variable = flag:wooden_horse }
	}
	text = {
		localization_key = doll
		trigger = { var:child_toy_variable = flag:doll }
	}
	text = {
		localization_key = stick_horse
		trigger = { var:child_toy_variable = flag:stick_horse }
	}
}

# v1.7.2
child_favorite_toy_adj = {
	parent = child_favorite_toy
	suffix = "_adj"
}

# v1.7.2
child_favorite_toy_accusative = {
	parent = child_favorite_toy
	suffix = "_accusative"
}

# v1.7.2
child_favorite_toy_instrumental = {
	parent = child_favorite_toy
	suffix = "_instrumental"
}

# v1.7.2
child_favorite_toy_instrumental = {
	parent = child_favorite_toy
	suffix = "_instrumental"
}

# v1.7.2
child_favorite_toy_my = {
	parent = child_favorite_toy
	suffix = "_my"
}

# v1.11 - original
KnightCulture = {
	type = character

	text = {
		trigger = {
			culture = { has_cultural_pillar = language_greek }
		}
		localization_key = knight_hetaeria
	}
	text = {
		trigger = {
			OR = {
				culture = { has_cultural_pillar = language_mongolic }
				culture = { has_cultural_pillar = language_turkic }
			}
		}
		localization_key = knight_baghatur
	}
	text = {
		trigger = {
			OR = {
				culture = { has_cultural_pillar = language_sauraseni }
				culture = { has_cultural_pillar = language_marathi }
				culture = { has_cultural_pillar = language_magadhan }
				culture = { has_cultural_pillar = language_pahari }
				culture = { has_cultural_pillar = language_vrachada }
				culture = { has_cultural_pillar = language_rajasthani }
				culture = { has_cultural_pillar = language_sinhalese }
				culture = { has_cultural_pillar = language_kashmiri }
				culture = { has_cultural_pillar = language_tamil }
				culture = { has_cultural_pillar = language_telugu }
				culture = { has_cultural_pillar = language_kannada }
				culture = { has_cultural_pillar = language_north_dravidian } #FP3 addition
			}
		}
		localization_key = knight_shoorveer
	}
	text = {
		trigger = {
			OR = {
				faith = { religion_tag = zoroastrianism_religion }
				culture = { has_cultural_pillar = language_iranian }
			}
		}
		localization_key = knight_aswaran
	}
	text = {
		trigger = {
			OR = {
				faith = { religion_tag = islam_religion }
				culture = { has_cultural_pillar = language_arabic }
			}
		}
		localization_key = knight_faris
	}
	text = {
		trigger = {
			OR = {
				government_has_flag = government_is_tribal
				NOR = {
					faith = { religion_tag = christianity_religion }
					culture = { has_cultural_pillar = language_frankish }
				}
			}
		}
		localization_key = knight_champion
	}
	text = {
		localization_key = knight_default
		fallback = yes
	}
}

# v1.5 - dopelniacz - rycerza, czempiona
KnightCulturePossessiveNoTooltip = {
	parent = KnightCulture
	suffix = "_no_tooltip_possessive"
}

# v1.5 - wołacz - rycerzu, czempionie
KnightCultureVocativeNoTooltip = {
	parent = KnightCulture
	suffix = "_no_tooltip_vocative"
}

# v1.5 - miejscownik - rycerzu, czempionie
KnightCultureLocativeNoTooltip = {
	parent = KnightCulture
	suffix = "_no_tooltip_locative"
}

# v1.5 - celownik - rycerzowi, czempionowi
KnightCultureDativeNoTooltip = {
	parent = KnightCulture
	suffix = "_no_tooltip_dative"
}

# v1.5 - narzednik - rycerzem, czempionem
KnightCultureInstrumentalNoTooltip = {
	parent = KnightCulture
	suffix = "_no_tooltip_instrumental"
}

# v1.5
PrisonTypeCellAdj = {
	type = character

	text = {
		trigger = { is_in_prison_type = dungeon }
		localization_key = prisontypecell_dungeon_cell_adj
	}

	text = {
		trigger = { is_in_prison_type = house_arrest }
		localization_key = prisontypecell_house_arrest_adj
	}
}

# v1.5
GetUpperClothingArticleAdj = {
	type = character

	random_valid = yes

	text = {
		trigger = {
			is_female = no
		}
		localization_key = clothing_word_shirt_adj
	}

	text = {
		trigger = {
			is_female = yes
		}
		localization_key = clothing_word_blouse_adj
	}

	text = {
		trigger = {
			is_female = yes
		}
		localization_key = clothing_word_dress_adj
	}
}

# v1.5
lowly_servant_type_adj = {
	type = character
	random_valid = yes

	text = {
		trigger = { is_male = yes }
		localization_key = stable_boy_adj
	}
	text = {
		trigger = {
			OR = {
				AND = {
					is_female = yes
					faith = {
						OR = {
							has_doctrine = doctrine_gender_female_dominated
							has_doctrine = doctrine_gender_equal
						}
					}
				}
				AND = {
					is_male = yes
					faith = {
						OR = {
							has_doctrine = doctrine_gender_male_dominated
							has_doctrine = doctrine_gender_equal
						}
					}
				}
			}
		}
		localization_key = page_adj
	}
	text = {
		trigger = { is_female = yes }
		localization_key = scullery_maid_adj
	}
	text = {
		localization_key = chandler_adj
	}
	text = {
		localization_key = launderer_adj
	}
	text = {
		localization_key = naperer_adj
	}
	text = {
		localization_key = scalder_adj
	}
	text = {
		localization_key = saucerer_adj
	}
}

# v1.5 - original
ChildChildrenGender = {
	type = character

	text = {
		trigger = {
			any_child = {
				any_sibling = { always = no }
				is_female = yes
			}
		}
		localization_key = relation_daughter
	}

	text = {
		trigger = {
			any_child = {
				any_sibling = { always = no }
				is_male = yes
			}
		}
		localization_key = relation_son
	}

	text = {
		trigger = {
			any_child = {
				is_female = yes
			}
			NOT = {
				any_child = {
					is_female = no
				}
			}
		}
		localization_key = relation_daughters
	}

	text = {
		trigger = {
			any_child = {
				is_male = yes
			}
			NOT = {
				any_child = {
					is_male = no
				}
			}
		}
		localization_key = relation_sons
	}

	text = {
		trigger = {
			any_child = {
				is_female = yes
			}
			any_child = {
				is_male = yes
			}
		}
		localization_key = relation_children
	}
}

# v1.5
ChildChildrenGenderOurAccusative = {
	parent = ChildChildrenGender
	suffix = "_our_accusative"
}

# v1.5
ChildChildrenGenderMyAccusative = {
	parent = ChildChildrenGender
	suffix = "_my_accusative"
}

# v1.10 - original
InsultNoun = {
	type = character
	random_valid = yes

	text = {
		localization_key = witch
		trigger = { is_female = yes }
	}
	text = {
		localization_key = doxy
		trigger = {
			is_adult = yes
			is_female = yes
		}
	}
	text = {
		localization_key = churl
		trigger = {
			is_male = yes
		}
	}		
	text = {
		localization_key = knave
		trigger = { is_male = yes }
	}
	text = {
		localization_key = spawn_of_hell
		trigger = {
			faith.religion = { is_in_family = rf_abrahamic }
			OR = {
				has_personality_malicious_trigger = yes
				has_trait = cynical
			}
		}
	}
	text = {
		localization_key = fiend
	}
	text = {
		localization_key = buffoon
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = cur
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = bastard
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = coward
		trigger = {
			has_trait = craven
			is_male = yes
		}
	}
	text = {
		localization_key = coward_female
		trigger = {
			has_trait = craven
			is_female = yes
		}
	}
	text = {
		localization_key = boar
		trigger = {
			has_personality_dominant_trigger = yes
			is_male = yes
		}
	}
	text = {
		localization_key = boar_female
		trigger = {
			has_personality_dominant_trigger = yes
			is_female = yes
		}
	}
	text = {
		localization_key = brat
		trigger = {
			is_adult = no
		}
	}
	text = {
		localization_key = rascal
		trigger = {
			is_adult = no
		}
	}
	text = {
		localization_key = ankle_biter
		trigger = {
			age <= 6
		}
	}
	text = {
		localization_key = whelp
		trigger = {
			age <= 8
		}
	}
	text = {
		localization_key = changeling
		trigger = {
			is_adult = no
		}
	}
	text = {
		localization_key = troll_spawn
		trigger = {
			is_adult = no
		}
	}
	text = {
		localization_key = newt
		trigger = {
			is_adult = no
		}
	}
	text = {
		localization_key = waif
		trigger = {
			is_adult = no
			OR = {
				NOT = { exists = father }
				father = { is_alive = no }
			}
			OR = {
				NOT = { exists = mother }
				mother = { is_alive = no }
			}
		}
	}
	text = {
		localization_key = ragamuffin
		trigger = {
			is_adult = no
			OR = {
				NOT = { exists = father }
				father = { is_alive = no }
			}
			OR = {
				NOT = { exists = mother }
				mother = { is_alive = no }
			}
		}
	}
	text = {
		localization_key = killcrop
		trigger = {
			is_adult = no
			has_trait = gluttonous
		}
	}
	text = {
		localization_key = cox_comb
		trigger = {
			OR = {
				has_trait = arrogant
				AND = {
					NOT = { has_trait = humble }
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
				}
			}
			is_male = yes
		}
	}
	text = {
		localization_key = cox_comb_female
		trigger = {
			OR = {
				has_trait = arrogant
				AND = {
					NOT = { has_trait = humble }
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
				}
			}
			is_female = yes
		}
	}
	text = {
		localization_key = strumpet
		trigger = {
			is_female = yes
			is_adult = yes
			OR = {
				has_trait = lustful
				has_trait = seducer
			}
		}
	}
	text = {
		localization_key = bedswerver
		trigger = {
			is_adult = yes
			OR = {
				has_trait = lustful
				has_trait = seducer
			}
			is_male = yes
		}
	}
	text = {
		localization_key = bedswerver_female
		trigger = {
			is_adult = yes
			OR = {
				has_trait = lustful
				has_trait = seducer
			}
			is_female = yes
		}
	}
	text = {
		localization_key = hag
		trigger = {
			is_adult = yes
			is_female = yes
		}
	}
	text = {
		localization_key = ogre
		trigger = {
			is_adult = yes
			is_male = yes
		}
	}
	text = {
		localization_key = wench
		trigger = {
			is_adult = yes
			is_female = yes
		}
	}
	text = {
		localization_key = swain
		trigger = {
			is_adult = yes
			is_male = yes
		}
	}
	text = {
		localization_key = oaf_insult
		trigger = {
			is_adult = yes
			OR = {
				has_trait = strong
				has_trait = physique_good
				has_trait = intellect_bad
				has_trait = dull
				has_trait = athletic
				has_trait = giant
			}
		}
	}
	text = {
		localization_key = lummox
		trigger = {
			is_adult = yes
			OR = {
				has_trait = strong
				has_trait = physique_good
				has_trait = intellect_bad
				has_trait = dull
				has_trait = athletic
				has_trait = giant
			}
		}
	}
	text = {
		localization_key = fopdoodle
		trigger = {
			is_adult = yes
			is_male = yes
		}
	}
	text = {
		localization_key = scullion
		trigger = {
			is_adult = yes
		}
	}
	text = {
		localization_key = commoner
		trigger = {
			is_adult = yes
			OR = {
				has_trait = peasant_leader
				has_dynasty = no
			}
		}
	}
	text = {
		localization_key = sycophant
		trigger = {
			is_adult = yes
			#has_trait = loyal
		}
	}
	text = {
		localization_key = banbury_cheese
		trigger = {
			is_adult = yes
			has_trait = spindly
			culture = { has_cultural_pillar = heritage_west_germanic }
		}
	}
	text = {
		localization_key = bampot
		trigger = {
			is_adult = yes
		}
	}
	text = {
		localization_key = pervert
		trigger = {
			is_adult = yes
			has_trait = deviant
		}
	}
	text = {
		localization_key = debaucher
		trigger = {
			is_adult = yes
			OR = {
				has_trait = deviant
				has_trait = rakish
				has_trait = lustful
			}
		}
	}
	# text = {
	# 	localization_key = venemous_animal_loc
	# 	trigger = {
	# 		is_adult = yes
	# 		OR = {
	# 			#has_trait = disloyal
	# 			has_trait = deceitful
	# 		}
	# 	}
	# }
	text = {
		localization_key = fool
		trigger = {
			is_adult = yes
		}
	}
	text = {
		localization_key = kumquat
		trigger = {
			is_adult = yes
			culture = {
				OR = {
					culture_overlaps_geographical_region = world_burma
					culture_overlaps_geographical_region = world_india
				}
			}
		}
	}
}

# v1.7
InsultNounGenitive = {
	parent = InsultNoun
	suffix = "_genitive"
}

# v1.7
InsultNounVocative = {
	parent = InsultNoun
	suffix = "_vocative"
}

# v1.7
InsultNounAccusative = {
	parent = InsultNoun
	suffix = "_accusative"
}

# v1.7
InsultNounInstrumental = {
	parent = InsultNoun
	suffix = "_instrumental"
}



# v1.6 - original
GetUnbelieverNamePlural = {
	type = character

	text = {
		trigger = {
			faith = {
				has_doctrine = pagan_hostility_doctrine
			}
		}
		localization_key = unbeliever_heathen_plural
	}
	text = {
		trigger = {
			faith = {
				NOT = { has_doctrine = pagan_hostility_doctrine }
			}
		}
		localization_key = unbeliever_infidel_plural
	}
}

# v1.6
GetUnbelieverNamePluralAdj = {
	parent = GetUnbelieverNamePlural
	suffix = "_adj"
}

# v1.6
GetUnbelieverNamePluralDative = {
	parent = GetUnbelieverNamePlural
	suffix = "_dative"
}

# ------------------------------ signature_weapon ------------------------------ #

# v1.5 - original
signature_weapon = {
	type = character

	text = {
		localization_key = signature_weapon_sword
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:sword
		}
		fallback = yes
	}

	text = {
		localization_key = signature_weapon_mace
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:mace
		}
	}

	text = {
		localization_key = signature_weapon_axe
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:axe
		}
	}

	text = {
		localization_key = signature_weapon_hammer
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:hammer
		}
	}

	text = {
		localization_key = signature_weapon_spear
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:spear
		}
	}

	text = {
		localization_key = signature_weapon_dagger
		trigger = {
			exists = var:signature_weapon
			var:signature_weapon = flag:dagger
		}
	}
}

# v1.5
signature_weapon_bier = {
	parent = signature_weapon
	suffix = "_bier"
}

# v1.5
signature_weapon_narz = {
	parent = signature_weapon
	suffix = "_narz"
}

# v1.5
signature_weapon_dop = {
	parent = signature_weapon
	suffix = "_dop"
}

# v1.5
signature_weapon_my = {
	parent = signature_weapon
	suffix = "_moj"
}

# ------------------------------------------------------------------------------ #

# v1.5
GritTypeAdj = {
	type = character

	text = {
		trigger = {
			location = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = grit_type_grit_adj
		fallback = yes
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = farmlands
					terrain = hills
					terrain = floodplains
				}
			}
		}
		localization_key = grit_type_dirt_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = desert
					terrain = oasis
				}
			}
		}
		localization_key = grit_type_sand_adj
	}

	text = {
		trigger = {
			location = { terrain = wetlands }
		}
		localization_key = grit_type_bog_water_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = forest
					terrain = taiga
				}
			}
		}
		localization_key = grit_type_twigs_adj
	}

	text = {
		trigger = {
			location = { terrain = jungle }
		}
		localization_key = grit_type_wet_leaves_adj
	}

	text = {
		trigger = {
			location = {
				OR = {
					terrain = steppe
					terrain = drylands
				}
			}
		}
		localization_key = grit_type_dry_grass_adj
	}
}

# v1.5
ToleranceValueAdj = {
	type = character

	text = {
		localization_key = tolerance_righteous_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_fully_accepted_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_astray_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_astray_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_sinister_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_hostile_level
				}
			}
		}
	}
	text = {
		localization_key = tolerance_evil_adj

		trigger = {
			faith = {
				faith_hostility_level = {
					target = scope:second.faith
					value = faith_evil_level
				}
			}
		}
	}
}

# v1.5
SeductionGiftTypeAdj = {
	type = character

	text = {
		trigger = { scope:gift = flag:tapestry }
		localization_key = seduce_gift_tapestry_adj
	}

	text = {
		trigger = { scope:gift = flag:horse }
		localization_key = seduce_gift_horse_adj
	}

	text = {
		trigger = { scope:gift = flag:tailor }
		localization_key = seduce_gift_tailored_clothes_adj
	}

	text = {
		trigger = { scope:gift = flag:rare_book }
		localization_key = seduce_gift_rare_book_adj
	}

	text = {
		trigger = { scope:gift = flag:embroidery }
		localization_key = seduce_gift_embroidery_adj
	}

	text = {
		trigger = { scope:gift = flag:poem }
		localization_key = seduce_gift_poem_adj
	}

	text = {
		trigger = { scope:gift = flag:woodcarving }
		localization_key = seduce_gift_woodcarving_adj
	}

	text = {
		trigger = { scope:gift = flag:object }
		localization_key = seduce_gift_object_adj
	}

	text = {
		trigger = { scope:gift = flag:jewelry }
		localization_key = seduce_gift_jewelry_adj
	}

	text = {
		trigger = { scope:gift = flag:stuffed_animal }
		localization_key = seduce_gift_stuffed_animal_adj
	}

	text = {
		trigger = { scope:gift = flag:flower_display }
		localization_key = seduce_gift_flower_display_adj
	}

	text = {
		trigger = { scope:gift = flag:handkerchief }
		localization_key = seduce_gift_handkerchief_adj
	}
}

# v1.6
PositiveAfterLifeBase = {
	type = faith

    #Wiary na poczatku
    
    #faith:sethianism
    text = {
		trigger = {
				this = faith:sethianism
		}
		localization_key = sethian_divine_realm
    }

    #faith:melieism
    text = {
		trigger = {
				this = faith:melieism
		}
		localization_key = tangut_positive_afterlife
    }

    # _________________________________________________________________ #
	
	#akom
	text = {
		trigger = {
			
				religion_tag = akom_religion
			}
		
		localization_key = akom_afterlife
	}

	#basque
		text = {
			trigger = {
				
					religion_tag = basque_religion
				}
			
			localization_key = basque_positive_afterlife
	}

    #baltic
    text = {
		trigger = {
			
				religion_tag = baltic_religion
			}
		
		localization_key = paganism_afterlife
	}

    #bon
    text = {
		trigger = {
			
				religion_tag = bon_religion
			}
		
		localization_key = bon_afterlife_positive
	}

    #buddhism
    text = {
		trigger = {
			
				religion_tag = buddhism_religion
			}
		
		localization_key = buddhism_divine_realm
	}

    #christianity
    text = {
		trigger = {
			
				religion_tag = christianity_religion
			}
		
		localization_key = christianity_positive_afterlife
	}

    #north african
    text = {
		trigger = {
			
				religion_tag = north_african_religion
			}
		
		localization_key = acham_positive_afterlife
	}

    #tani
    text = {
		trigger = {
			
				religion_tag = tani_religion
			}
		
		localization_key = tani_positive_afterlife
	}

    #dualism
    text = {
		trigger = {
			
				religion_tag = dualism_religion
			}
		
		localization_key = dualism_positive_afterlife
	}

    #finno-ugric
    text = {
		trigger = {
			
				religion_tag = finno_ugric_religion
			}
		
		localization_key = finno_ugric_afterlife
	}

    #germanic
    text = {
		trigger = {
			
				religion_tag = germanic_religion
			}
		
		localization_key = germanic_positive_afterlife
	}

    #hellenism
    text = {
		trigger = {
			
				religion_tag = hellenism_religion
			}
		
		localization_key = hellenism_death_deity_name
	}

    #hinduism, mundhum
    text = {
		trigger = {
			
				OR = { 
                    religion_tag = hinduism_religion
                    religion_tag = mundhum_religion
                }
			}
		
		localization_key = hinduism_positive_afterlife
	}

    #islam
    text = {
		trigger = {
			
				religion_tag = islam_religion
			}
		
		localization_key = islam_positive_afterlife
	}

    #jainism
    text = {
		trigger = {
			
				religion_tag = jainism_religion
			}
		
		localization_key = jainism_positive_afterlife
	}

    #judaism
    text = {
		trigger = {
			
				religion_tag = judaism_religion
			}
		
		localization_key = judaism_positive_afterlife
	}

    #kushitism
    text = {
		trigger = {
			
				religion_tag = kushitism_religion
			}
		
		localization_key = kushitism_divine_realm
	}

    #magyar
    text = {
		trigger = {
			
				religion_tag = magyar_religion
			}
		
		localization_key = magyar_divine_realm
	}

    #paganism
    text = {
		trigger = {
			
				religion_tag = paganism_religion
			}
		
		localization_key = paganism_divine_realm
	}

    #qiangic
    text = {
		trigger = {
			
				religion_tag = qiangic_religion
			}
		
		localization_key = qiangic_positive_afterlife
	}

    #siberian
    text = {
		trigger = {
			
				religion_tag = siberian_religion
			}
		
		localization_key = siberian_divine_realm
	}

    #slavic
    text = {
		trigger = {
			
				religion_tag = slavic_religion
			}
		
		localization_key = slavic_positive_afterlife
	}

    #taoism
    text = {
		trigger = {
			
				religion_tag = taoism_religion
			}
		
		localization_key = taoism_positive_afterlife
	}

    #tengrism
    text = {
		trigger = {
			
				religion_tag = tengrism_religion
			}
		
		localization_key = tengrism_divine_realm
	}

    #waaqism
    text = {
		trigger = {
			
				religion_tag = waaqism_religion
			}
		
		localization_key = waaqism_afterlife
	}

    #west african bori
    text = {
		trigger = {
			
				religion_tag = west_african_bori_religion
			}
		
		localization_key = west_african_bori_divine_realm
	}

    #west african orisha
    text = {
		trigger = {
			
				religion_tag = west_african_orisha_religion
			}
		
		localization_key = yoruba_divine_realm
	}

    #west african roog
    text = {
		trigger = {
			
				religion_tag = west_african_roog_religion
			}
		
		localization_key = west_african_roog_afterlife
	}

    #west african 
    text = {
		trigger = {
			
				religion_tag = west_african_religion
			}
		
		localization_key = west_african_divine_realm
	}

    #yazidi
    text = {
		trigger = {
			
				religion_tag = yazidi_religion
			}
		
		localization_key = yazidi_positive_afterlife
	}

    #zoroastrianism
    text = {
		trigger = {
			
				religion_tag = zoroastrianism_religion
			}
		
		localization_key = zoroastrianism_positive_afterlife
	}

    #zunism
    text = {
		trigger = {
			
				religion_tag = zunism_religion
			}
		
		localization_key = zunism_divine_realm
	}

    #fallback
	text = {
			localization_key = positive_afterlife_fallback
			fallback = yes
		}
}

# v1.5
PositiveAfterLifeLocative = {
	parent = PositiveAfterLifeBase
	suffix = "_locative"
}

# v1.5
PositiveAfterLifeGenitive = {
	parent = PositiveAfterLifeBase
	suffix = "_genitive"
}

# v1.5
NegativeAfterLifeBase = {
	type = faith

	#akom
	text = {
		trigger = {
			
				religion_tag = akom_religion
			}
		
		localization_key = akom_afterlife
	}

	#basque
		text = {
			trigger = {
	
					religion_tag = basque_religion
				}
			
			localization_key = basque_negative_afterlife
		}

    #baltic, paganism
    text = {
		trigger = {
			
				OR = {
					religion_tag = baltic_religion
					religion_tag = paganism_religion
				}
			}
		
		localization_key = paganism_afterlife 
	}

    #bon, tani
    text = {
		trigger = {
			
				OR = {
					religion_tag = bon_religion
					religion_tag = tani_religion
				}
			}
		
		localization_key = bon_afterlife_negative
	}

    #buddhism
    text = {
		trigger = {
			
				religion_tag = buddhism_religion
			}
		
		localization_key = buddhism_negative_afterlife
	}

    #christianity
    text = {
		trigger = {
			
				religion_tag = christianity_religion
			}
		
		localization_key = christianity_negative_afterlife
	}

    #north african
    text = {
		trigger = {
			
				religion_tag = north_african_religion
			}
		
		localization_key = acham_negative_afterlife
	}

    #dualism
    text = {
		trigger = {
			
				religion_tag = dualism_religion
			}
		
		localization_key = dualism_negative_afterlife
	}

    #finno-ugric
    text = {
		trigger = {
			
				religion_tag = finno_ugric_religion
			}
		
		localization_key = finno_ugric_afterlife
	}

    #germanic
    text = {
		trigger = {
			
				religion_tag = germanic_religion
			}
		
		localization_key = germanic_death_deity_name
	}

    #hellenism
    text = {
		trigger = {
			
				religion_tag = hellenism_religion
			}
		
		localization_key = hellenism_death_deity_name
	}

    #hinduism, mundhum
    text = {
		trigger = {
			
				OR = { 
                    religion_tag = hinduism_religion
                    religion_tag = mundhum_religion
                }
			}
		
		localization_key = hinduism_negative_afterlife
	}

    #islam
    text = {
		trigger = {
			
				religion_tag = islam_religion
			}
		
		localization_key = islam_negative_afterlife
	}

    #jainism
    text = {
		trigger = {
			
				religion_tag = jainism_religion
			}
		
		localization_key = jainism_negative_afterlife
	}

    #judaism
    text = {
		trigger = {
			
				religion_tag = judaism_religion
			}
		
		localization_key = judaism_negative_afterlife
	}

    #kushitism
    text = {
		trigger = {
			
				religion_tag = kushitism_religion
			}
		
		localization_key = kushitism_divine_realm
	}

    #magyar
    text = {
		trigger = {
			
				religion_tag = magyar_religion
			}
		
		localization_key = magyar_afterlife
	}

    #qiangic
    text = {
		trigger = {
			
				religion_tag = qiangic_religion
			}
		
		localization_key = qiangic_negative_afterlife
	}

    #siberian
    text = {
		trigger = {
			
				religion_tag = siberian_religion
			}
		
		localization_key = siberian_afterlife_negative
	}

    #slavic
    text = {
		trigger = {
			
				religion_tag = slavic_religion
			}
		
		localization_key = slavic_negative_afterlive
	}

    #taoism
    text = {
		trigger = {
			
				religion_tag = taoism_religion
			}
		
		localization_key = taoism_negative_afterlife
	}

    #tengrism
    text = {
		trigger = {
			
				religion_tag = tengrism_religion
			}
		
		localization_key = tengrism_afterlife_negative
	}

    #waaqism
    text = {
		trigger = {
			
				religion_tag = waaqism_religion
			}
		
		localization_key = waaqism_afterlife
	}

    #west african bori
    text = {
		trigger = {
			
				religion_tag = west_african_bori_religion
			}
		
		localization_key = west_african_bori_divine_realm
	}

    #west african orisha
    text = {
		trigger = {
			
				religion_tag = west_african_orisha_religion
			}
		
		localization_key = yoruba_divine_realm
	}

    #west african roog
    text = {
		trigger = {
			
				religion_tag = west_african_roog_religion
			}
		
		localization_key = west_african_roog_afterlife
	}

    #west african 
    text = {
		trigger = {
			
				religion_tag = west_african_religion
			}
		
		localization_key = west_african_divine_realm
	}

    #yazidi
    text = {
		trigger = {
			
				religion_tag = yazidi_religion
			}
		
		localization_key = yazidi_negative_afterlife
	}

    #zoroastrianism
    text = {
		trigger = {
			
				religion_tag = zoroastrianism_religion
			}
		
		localization_key = zoroastrianism_negative_afterlife
	}

    #zunism
    text = {
		trigger = {
			
				religion_tag = zunism_religion
			}
		
		localization_key = zunism_afterlife_negative
	}

    #fallback
	text = {
			localization_key = negative_afterlife_fallback
			fallback = yes
		}
}

# v1.5
NegativeAfterLifeGenitive = {
	parent = NegativeAfterLifeBase
	suffix = "_genitive"
}

# v1.5
NegativeAfterLifeLocative = {
	parent = NegativeAfterLifeBase
	suffix = "_locative"
}


# v1.5
ThreeToTwelveInstrumental = {
	type = character
	random_valid = yes

	text = {
		localization_key = number_three_instrumental
	}
	text = {
		localization_key = number_four_instrumental
	}
	text = {
		localization_key = number_five_instrumental
	}
	text = {
		localization_key = number_six_instrumental
	}
	text = {
		localization_key = number_seven_instrumental
	}
	text = {
		localization_key = number_eight_instrumental
	}
	text = {
		localization_key = number_nine_instrumental
	}
	text = {
		localization_key = number_ten_instrumental
	}
	text = {
		localization_key = number_eleven_instrumental
	}
	text = {
		localization_key = number_twelve_instrumental
	}
}

# v1.5
InsultNounSexualVocative = {
	type = character

	random_valid = yes

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_lecher_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_debaucher_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_fornicator_vocative
	}

	text = {
		trigger = { is_male = yes }
		localization_key = insultnounsexual_philanderer_vocative
	}

	text = {
		trigger = {
			is_male = yes
			NOT = { has_trait = sodomite }
		}
		localization_key = insultnounsexual_womanizer_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_amorosa_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_jezebel_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_quean_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_delilah_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_strumpet_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_trollop_vocative
	}

	text = {
		trigger = { is_female = yes }
		localization_key = insultnounsexual_hussy_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_voluptuary_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_copulator_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_libidinist_vocative
	}

	text = {
		trigger = { is_male = yes }
		weight_multiplier = {
			base = 0.1
		}
		localization_key = insultnounsexual_roue_vocative
	}
	
	# female versions requested for other languages
	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_voluptuary_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_copulator_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.3
		}
		localization_key = insultnounsexual_libidinist_female_vocative
	}

	text = {
		trigger = { is_female = yes }
		weight_multiplier = {
			base = 0.1
		}
		localization_key = insultnounsexual_roue_female_vocative
	}
	# --
	text = {
		trigger = {
			is_female = yes
		}
		localization_key = whore_vocative
	}
	text = {
		trigger = {
			is_female = yes
		}
		localization_key = harlot_vocative
	}
	text = {
		weight_multiplier = {
			base = 0.3
		}
		localization_key = bedswerver_vocative
	}
	text = {
		trigger = { is_male = yes }
		localization_key = pig_vocative
	}
	text = {
		trigger = { is_male = yes }
		localization_key = skirt_chaser_vocative
	}
}


# v1.9.0.2 - original
FavoriteTreat = {
	type = character

	random_valid = yes

	text = {
		localization_key = treat_comfit
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:comfit
			}
		}
	}
	text = {
		localization_key = treat_roasted_almonds
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:roasted_almonds
			}
		}
	}
	text = {
		localization_key = treat_nougat
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:nougat
			}
		}
	}
	text = {
		localization_key = treat_marzipan
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:marzipan
			}
		}
	}
	text = {
		localization_key = treat_sweetroll
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sweetroll
			}
		}
	}
	text = {
		localization_key = treat_poached_pear
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:poached_pear
			}
		}
	}
	text = {
		localization_key = treat_pudding
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:pudding
			}
		}
	}
	text = {
		localization_key = treat_apple_tart
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:apple_tart
			}
		}
	}
	text = {
		localization_key = treat_strawberry_compote
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:strawberry_compote
			}
		}
	}
	text = {
		localization_key = treat_gingerbread
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:gingerbread
			}
		}
	}
	text = {
		localization_key = treat_frytour_blaunched
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:frytour_blaunched
			}
		}
	}
	text = {
		localization_key = treat_fig_pie
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:fig_pie
			}
		}
	}
	text = {
		localization_key = treat_pokerounce
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:pokerounce
			}
		}
	}
	text = {
		localization_key = treat_sambocade
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sambocade
			}
		}
	}
	text = {
		localization_key = treat_sesame_cake
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sesame_cake
			}
		}
	}
	text = {
		localization_key = treat_baked_banana
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:baked_banana
			}
		}
	}
}

# v1.9.0.2
FavoriteTreatAccusative = {
	parent = FavoriteTreat
	suffix = "_accusative"
}

# v1.5
TitleZZe = {
	type = landed_title

	text = {
		trigger = {
			OR = {
				this = title:b_wschowa
				this = title:b_szczecin
				this = title:b_slupsk
				# this = title:b_ortelsbur
				this = title:b_hammerstein
				this = title:b_schwetz
				this = title:b_gorlitz
				this = title:b_sprottau
				this = title:b_schweibus
				# this = title:b_lvov
				this = title:b_lviv
				this = title:b_stezyca
				this = title:b_slutsk
				this = title:b_smolensk

			}
		}
		localization_key = title_ze
	}

	text = {
		fallback = yes
		localization_key = title_z
	}
}


# v1.5
TitleIsPlural = {
	type = landed_title

	text = {
		trigger = {
			OR = {
				this = title:d_bohemia
				this = title:k_bohemia
				this = title:k_moravia
				this = title:d_prussia
				this = title:d_cherven_cities
				this = title:d_masuria
				this = title:d_transylvanian_alps
				this = title:k_hungary
				this = title:k_italy
				this = title:e_italy
				this = title:d_jomsvikings
				this = title:c_kujawy
				# this = title:c_lettigalians
				# this = title:d_arabs
				# this = title:d_kajaneborg
				# this = title:d_khazars
				# this = title:d_meryas
				# this = title:d_pruthenians
				# this = title:d_sami
				# this = title:d_veps
				# this = title:d_votes
				this = title:k_pechenegs
				this = title:c_golden_hills
			}
		}
		localization_key = pt_true
	}

	text = {
		fallback = yes
		localization_key = pt_false
	}
}

# v1.5
SignatureWeaponAttemptedHeavyAccusative = {
	type = character

	text = {
		localization_key = signature_weapon_attempted_heavy_slash_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:sword
				var:signature_weapon = flag:axe
				var:signature_weapon = flag:dagger
			}
		}
		fallback = yes
	}
	text = {
		localization_key = signature_weapon_attempted_heavy_crush_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:mace
				var:signature_weapon = flag:hammer
			}
		}
	}
	text = {
		localization_key = signature_weapon_attempted_heavy_pierce_accusative
		trigger = {
			var:signature_weapon = flag:spear
		}
	}
}

# v1.5
SignatureWeaponAttemptedLightAccusative = {
	type = character

	text = {
		localization_key = signature_weapon_attempted_light_slash_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:sword
				var:signature_weapon = flag:axe
				var:signature_weapon = flag:dagger
			}
		}
		fallback = yes
	}
	text = {
		localization_key = signature_weapon_attempted_light_crush_accusative
		trigger = {
			OR = {
				var:signature_weapon = flag:mace
				var:signature_weapon = flag:hammer
			}
		}
	}
	text = {
		localization_key = signature_weapon_attempted_light_pierce_accusative
		trigger = {
			var:signature_weapon = flag:spear
		}
	}
}

# v1.5
RarityAdjToArtifactSlotType = {
	type = artifact

	text = {
		trigger = { 
			OR = { 
				   artifact_slot_type = pedestal
				   artifact_slot_type = sculpture
				   artifact_slot_type = throne
				   artifact_slot_type = wall_big
				   artifact_slot_type = wall_small
			 }
		}
		localization_key = slot_type_1
	}

	text = {
		trigger = { 
			OR = {
				artifact_slot_type = helmet 
				artifact_slot_type = regalia
			}
		}
		localization_key = slot_type_2
	}

	text = {
		fallback = yes
		localization_key = slot_type_0
	}

}

# v1.5
RarityAdjToArtifactType = {
	type = artifact

	text = {
		trigger = { 
			OR = { 
				   artifact_type = pedestal
				   artifact_type = sculpture
				   artifact_type = throne
				   artifact_type = goblet
				   artifact_type = wall_big
				   artifact_type = wall_small
				   artifact_type = elixir
				   artifact_type = philosophers_stone
			 }
		}
		localization_key = slot_type_1
	}

	text = {
		trigger = { 
			OR = {
				artifact_type = helmet 
				artifact_type = regalia
				artifact_type = box
				artifact_type = panacea
			}
		}
		localization_key = slot_type_2
	}

	text = {
		fallback = yes
		localization_key = slot_type_0
	}

}

# v1.5
RarityAdjType = {
	type = artifact

	text = {
		trigger = { rarity = masterwork }
		localization_key = masterwork
	}

	text = {
		trigger = { rarity = famed }
		localization_key = famed
	}

	text = {
		trigger = { rarity = illustrious }
		localization_key = illustrious
	}

	text = {
		trigger = { rarity = legendary }
		localization_key = legendary
	}

	text = {
		trigger = { rarity = rare }
		localization_key = rare
	}

}

# v1.5
RarityAdjType1 = {
	parent = RarityAdjType
	suffix = "_type_1"
}

# v1.5
RarityAdjType2 = {
	parent = RarityAdjType
	suffix = "_type_2"
}

# v1.9.0.2 - original
GetExpensiveDessertInTheFace = {
	type = character

	random_valid = yes

	text = {
		localization_key = expensive_dessert_saffron_cake_face
	}
	text = {
		localization_key = expensive_dessert_candied_figs_face
	}
	text = {
		localization_key = expensive_dessert_pomegranate_cake_face
	}
	text = {
		trigger = {
			location = {
				geographical_region = world_europe_west
			}
		}
		localization_key = expensive_dessert_entremets_face
	}
	text = {
		localization_key = expensive_dessert_quince_tarts_face
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe_west
					geographical_region = world_europe_south
				}
			}
		}
	}
}

GetExpensiveDessertInTheFaceInstrumental = {
	parent = GetExpensiveDessertInTheFace
	suffix = "_instrumental"
}

# v1.5 - original
ArtifactQuality  = {
	type = character

	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:quality
					scope:quality > 75

				}
				AND = {
					exists = var:quality
					var:quality > 75
				}
			}
		}
		localization_key = quality_masterful
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:quality
					scope:quality > 50

				}
				AND = {
					exists = var:quality
					var:quality > 50
				}
			}
		}
		localization_key = quality_excellent
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:quality
					scope:quality > 25

				}
				AND = {
					exists = var:quality
					var:quality > 25
				}
			}
		}
		localization_key = quality_very_fine
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:quality
					scope:quality <= 25

				}
				AND = {
					exists = var:quality
					var:quality <= 25
				}
			}
		}
		localization_key = quality_fine
		fallback = yes
	}
}

ArtifactQualityNarz = {
	parent = ArtifactQuality
	suffix = "_narz"
}

ArtifactQualityFMie = {
	parent = ArtifactQuality
	suffix = "_fmie"
}

# v1.11 - original
GetInspirationTypeVerb = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_verb_write
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration
					has_inspiration_type = armor_inspiration
				}
			}
		}
		localization_key = inspiration_type_verb_forge
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_verb_weave
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_verb_go
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_verb_create
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_verb_make
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_verb_study
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = research_inspiration }
		}
		localization_key = inspiration_type_verb_research
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_verb_make
	}
}

GetInspirationTypeGerund = {
	parent = GetInspirationTypeVerb
	suffix = "_gerund"
}

# v1.5 - original
ArtifactArticleWealth = {
	type = character

	random_valid = yes

	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 85
				}
				AND = {
					exists = var:wealth
					var:wealth >= 85
				}
			}
		}
		localization_key = article_wealth_extravagant
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 65
					scope:wealth < 85

				}
				AND = {
					exists = var:wealth
					var:wealth >= 65
					var:wealth < 85
				}
			}
		}
		localization_key = article_wealth_opulent
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 55
					scope:wealth < 65

				}
				AND = {
					exists = var:wealth
					var:wealth >= 55
					var:wealth < 65
				}
			}
		}
		localization_key = article_wealth_beautiful
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 45
					scope:wealth < 55

				}
				AND = {
					exists = var:wealth
					var:wealth >= 45
					var:wealth < 55
				}
			}
		}
		localization_key = article_wealth_elegant
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 25
					scope:wealth < 45

				}
				AND = {
					exists = var:wealth
					var:wealth >= 25
					var:wealth < 45
				}
			}
		}
		localization_key = article_wealth_ornate
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:wealth
					scope:wealth >= 15
					scope:wealth < 25

				}
				AND = {
					exists = var:wealth
					var:wealth >= 15
					var:wealth < 25
				}
			}
		}
		localization_key = article_wealth_fancy
	}
	text = {
		trigger = { always = no }
		localization_key = article_wealth_plain
		fallback = yes
	}
}

ArtifactArticleWealthMasculine = {
	parent = ArtifactArticleWealth
	suffix = "_masc"
}

ArtifactArticleWealthAccusativeFem = {
	parent = ArtifactArticleWealth
	suffix = "_acc_fem"
}

#v1.5 - original
InspirationAdventureDestination = {
	type = character

	text = { #africa
		trigger = {
			var:adventure_destination = flag:africa
		}
		localization_key = world_africa
	}

	text = { #world_africa_west
		trigger = {
			var:adventure_destination = flag:africa_west
		}
		localization_key = world_africa_west
	}

	text = { #africa_north
		trigger = {
			var:adventure_destination = flag:africa_north
		}
		localization_key = world_africa_north
	}

	text = { #africa_east
		trigger = {
			var:adventure_destination = flag:africa_east
		}
		localization_key = world_africa_east
	}

	text = { #europe
		trigger = {
			var:adventure_destination = flag:europe
		}
		localization_key = world_europe
	}

	text = { #europe_north
		trigger = {
			var:adventure_destination = flag:europe_north
		}
		localization_key = world_europe_north
	}

	text = { #europe_south
		trigger = {
			var:adventure_destination = flag:europe_south
		}
		localization_key = world_europe_south
	}

	text = { #europe_west
		trigger = {
			var:adventure_destination = flag:europe_west
		}
		localization_key = world_europe_west
	}

	text = { #europe_east
		trigger = {
			var:adventure_destination = flag:europe_east
		}
		localization_key = world_europe_east
	}

	text = { #middle_east
		trigger = {
			var:adventure_destination = flag:middle_east
		}
		localization_key = adventure_inspiration_world_middle_east
	}

	text = { #middle_east_jerusalem
		trigger = {
			var:adventure_destination = flag:middle_east_jerusalem
		}
		localization_key = world_middle_east_jerusalem
	}

	text = { #middle_east_arabia
		trigger = {
			var:adventure_destination = flag:middle_east_arabia
		}
		localization_key = world_middle_east_arabia
	}

	text = { #middle_east_persia
		trigger = {
			var:adventure_destination = flag:middle_east_persia
		}
		localization_key = world_middle_east_persia
	}

	text = { #india
		trigger = {
			var:adventure_destination = flag:india
		}
		localization_key = world_india
	}

	text = { #india_deccan
		trigger = {
			var:adventure_destination = flag:india_deccan
		}
		localization_key = world_india_deccan
	}

	text = { #india_bengal
		trigger = {
			var:adventure_destination = flag:india_bengal
		}
		localization_key = world_india_bengal
	}

	text = { #india_rajastan
		trigger = {
			var:adventure_destination = flag:india_rajastan
		}
		localization_key = world_india_rajastan
	}

	text = { #steppe
		trigger = {
			var:adventure_destination = flag:steppe
		}
		localization_key = adventure_inspiration_world_steppe
	}

	text = { #steppe_west
		trigger = {
			var:adventure_destination = flag:steppe_west
		}
		localization_key = adventure_inspiration_world_steppe_west
	}

	text = { #steppe_east
		trigger = {
			var:adventure_destination = flag:steppe_east
		}
		localization_key = adventure_inspiration_world_steppe_east
	}

	text = { #steppe_tarim
		trigger = {
			var:adventure_destination = flag:steppe_tarim
		}
		localization_key = world_steppe_tarim
	}

	text = { #asia_minor
		trigger = {
			var:adventure_destination = flag:asia_minor
		}
		localization_key = world_asia_minor
	}

	text = { #tibet
		trigger = {
			var:adventure_destination = flag:tibet
		}
		localization_key = world_tibet
	}

	text = { #burma
		trigger = {
			var:adventure_destination = flag:burma
		}
		localization_key = world_burma
	}
}

#v1.5
InspirationAdventureDestinationGenitive = {
	parent = InspirationAdventureDestination
	suffix = "_genitive"
}

#v1.9.0.2
ArtifactFlowerSpeciesGender = {
	type = character

	text = {
		trigger = {
			exists = scope:flower_species
			OR = {
				scope:flower_species = flag:flower_type_orchid
				scope:flower_species = flag:flower_type_rose
				scope:flower_species = flag:flower_type_foxglove
				scope:flower_species = flag:flower_type_geranium
				scope:flower_species = flag:flower_type_lily
				scope:flower_species = flag:flower_type_lavender
				scope:flower_species = flag:flower_type_peony
				scope:flower_species = flag:flower_type_delphinium
				scope:flower_species = flag:flower_type_chrysanthemum
				scope:flower_species = flag:flower_type_gardenia
			}
		}
		localization_key = ArtifactFlowerSpecies_z
	}

	text = {
		localization_key = ArtifactFlowerSpecies_m
		fallback = yes
	}

}


PetNamePrecious = { #PetName: lover ones with sexual or romantic terms removed
	type = character

	random_valid = yes

	text = {
		localization_key = pet_name_darling_precious
	}

	text = {
		localization_key = pet_name_dearest_precious_precious
	}

	text = {
		localization_key = pet_name_little_pet_precious
	}

	text = {
		localization_key = pet_name_treasure_precious
	}

	text = {
		localization_key = pet_name_sweetness_precious
	}

	text = {
		localization_key = pet_name_rose_precious
	}

	text = {
		localization_key = pet_name_sunshine_precious
	}

	text = {
		localization_key = pet_name_spring_blossom_precious
	}

	text = {
		localization_key = pet_name_petal_precious
	}

	text = {
		localization_key = pet_name_honeycomb_precious
	}
}
#v1.9.0.2 - original
GetExpensiveMeal = {
	type = character

	random_valid = yes

	text = {
		localization_key = expensive_food_roast_swan
		trigger = {
			faith = {
				NOR = {
					has_doctrine_parameter = pacifist_opinion_active
				}
			}
			location = {
				NOT = { geographical_region = world_africa }
				NOT = { geographical_region = world_india }
			}
		}
	}
	text = {
		localization_key = expensive_food_veal_cutlets
		trigger = {
			faith = {
				NOR = {
					religion_tag = hinduism_religion
					has_doctrine_parameter = pacifist_opinion_active
				}
			}
		}
	}
	text = {
		localization_key = expensive_food_fresh_quail
		trigger = {
			faith = {
				NOR = {
					has_doctrine_parameter = pacifist_opinion_active
				}
			}
		}
	}
	text = {
		trigger = {
			location = {
				NOT = { geographical_region = world_europe } #Not in use in Europe during this time(though they did exist)!
			}
		}
		localization_key = expensive_food_baked_truffles
	}
	text = {
		trigger = {
			always = no
		}
		fallback = yes
		localization_key = expensive_food_spiced_breads
	}
	text = {
		trigger = {
			always = no
		}
		localization_key = expensive_food_mustard_rolls
		fallback = yes
	}
}

#v1.6.1 
GetExpensiveMealBier = {
	parent = GetExpensiveMeal
	suffix = "_bier"
}

#v1.6.1 
GetExpensiveMealDop = {
	parent = GetExpensiveMeal
	suffix = "_dop"
}

#v1.9.0.2 - original
GetExpensiveMealAlt = {
	type = character

	random_valid = yes

	text = {
		localization_key = expensive_food_fine_cheeses
	}
	text = {
		trigger = {
			faith = {
				religion_tag = christianity_religion #Due to Lent prohibitions.
			}
		}
		localization_key = expensive_food_almond_eggs
	}
	text = {
		trigger = {
			location = {
				geographical_region = world_europe_west
			}
		}
		localization_key = expensive_food_sturgeon_caviar
	}
}

#v1.6.1 
GetExpensiveMealAltDop = {
	parent = GetExpensiveMealAlt
	suffix = "_dop"
}

#v1.6.1 - original
GetDisability = { #Disability: to call on health effects
	type = character
	text = { 	
		trigger = { has_trait = dwarf }
		localization_key = trait_dwarf
	}
	text = {
		trigger = { has_trait = giant }
		localization_key = trait_giant
	}
	text = {
		trigger = { has_trait = hunchbacked }
		localization_key = trait_hunchbacked
	}
	text = {
		trigger = { has_trait = clubfooted }
		localization_key = trait_clubfooted
	}
	text = {
		trigger = { has_trait = scarred }
		localization_key = trait_scarred
	}
	text = {
		trigger = { has_trait = one_eyed }
		localization_key = trait_one_eyed
	}
	text = {
		trigger = { has_trait = maimed }
		localization_key = trait_maimed
	}
	text = {
		trigger = { has_trait = blind }
		localization_key = trait_blind
	}
	text = {
		trigger = { has_trait = disfigured }
		localization_key = trait_disfigured
	}
	text = {
		trigger = { has_trait = scaly }
		localization_key = trait_scaly
	}
	text = {
		trigger = { has_trait = albino }
		localization_key = trait_albino
	}
	text = {
		trigger = { has_trait = lisping }
		localization_key = trait_lisping
	}
	text = {
		trigger = { has_trait = stuttering }
		localization_key = trait_stuttering
	}
	text = {
		trigger = { has_trait = depressed }
		localization_key = trait_depressed
	}
	text = {
		trigger = { has_trait = spindly }
		localization_key = trait_spindly
	}
	text = {
		trigger = { has_trait = infirm }
		localization_key = trait_infirm
	}
	text = {
		trigger = { has_trait = weak }
		localization_key = trait_weak
	}
	text = {
		trigger = { has_trait = wheezing }
		localization_key = trait_wheezing
	}
	text = {
		trigger = { has_trait = impotent }
		localization_key = trait_impotent
	}
	text = {
		trigger = { has_trait = possessed }
		localization_key = trait_possessed
	}
	text = {
		trigger = { has_trait = bleeder }
		localization_key = trait_bleeder
	}
	text = {
		trigger = { has_trait = wounded }
		localization_key = trait_wounded
	}
	text = {
		trigger = { has_trait = dull }
		localization_key = trait_dull
	}
	text = {
		trigger = { always = yes }
		localization_key = disabled_fallback
	}
}

#v1.6.1 
GetDisabilityIns = {
	parent = GetDisability
	suffix = "_ins"
}

#v1.9.0.2 - original
GetExpensiveDessert = {
	type = character

	random_valid = yes

	text = {
		localization_key = expensive_dessert_saffron_cake
	}
	text = {
		localization_key = expensive_dessert_candied_figs
	}
	text = {
		localization_key = expensive_dessert_pomegranate_cake
	}
	text = {
		trigger = {
			location = {
				geographical_region = world_europe_west
			}
		}
		localization_key = expensive_dessert_entremets
	}
	text = {
		localization_key = expensive_dessert_quince_tarts
		trigger = {
			location = {
				geographical_region = world_europe_west
				geographical_region = world_europe_south
			}
		}
	}
}

#v1.6.1 
GetExpensiveDessertBier = {
	parent = GetExpensiveDessert
	suffix = "_bier"
}

#v1.6.1 
GetExpensiveDessertNarz = {
	parent = GetExpensiveDessert
	suffix = "_narz"
}

GetExpensiveDessertDop = {
	parent = GetExpensiveDessert
	suffix = "_dop"
}

#v1.6.1 - original
GetExoticPet = {
	type = character

	text = {
		trigger = {
			scope:captured_animal = flag:wolf
		}
		localization_key = pet_wolf
	}
	text = {
		trigger = {
			scope:captured_animal = flag:bear
		}
		localization_key = pet_bear
	}
	text = {
		trigger = {
			scope:captured_animal = flag:lion
		}
		localization_key = pet_lion
	}
	text = {
		trigger = {
			scope:captured_animal = flag:tiger
		}
		localization_key = pet_tiger
	}
}

#v1.6.1 
GetExoticPetAcc = {
	parent = GetExoticPet
	suffix = "_acc"
}

#v1.6.1 - orginal
GetFaithGrandTemple = { # Get name of Grand Temple in religion
	type = character

	text = {
		trigger = { faith.religion = religion:christianity_religion }
		localization_key = building_holy_site_cathedral_01
	}

	text = {
		trigger = { faith.religion = religion:islam_religion }
		localization_key = building_holy_site_mosque_01
	}

	text = {
		trigger = { always = yes }
		localization_key = building_type_holy_site_other_grand_temple_01
	}
}

#v1.6.1 
GetFaithGrandTempleLocative = {
	parent = GetFaithGrandTemple
	suffix = "_locative"
}

#v1.6.1  - orginal
ThisArtifactType = {
	type = character

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = helmet
			}
		}
		localization_key = artifact_type_helmet
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_slot_type = primary_armament
			}
		}
		localization_key = artifact_type_primary_armament
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_slot_type = armor
			}
		}
		localization_key = artifact_type_armor
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = regalia
			}
		}
		localization_key = artifact_type_regalia
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = miscellaneous
			}
		}
		localization_key = artifact_type_trinket
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = wall_big
			}
		}
		localization_key = artifact_type_wall_big
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = wall_small
			}
		}
		localization_key = artifact_type_wall_small
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = throne
			}
		}
		localization_key = artifact_type_throne
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = sculpture
			}
		}
		localization_key = artifact_type_sculpture
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = book
			}
		}
		localization_key = artifact_type_book
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = pedestal
			}
		}
		localization_key = artifact_type_pedestal
	}

	text = {
		trigger = {
			scope:this_artifact = {
				artifact_type = elixir
			}
		}
		localization_key = artifact_type_elixir
	}
}

ThisArtifactTypeBier = {
	parent = ThisArtifactType
	suffix = "_bier"
}

GetVictimOrMy_VictimTrue = { # Used in Hold Court
	type = character

	text = {
		trigger = {
			top_liege = { has_character_flag = concerned_exists }
		}
		localization_key = pt_true
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = pt_false
	}
}

#1.6 - original
GetUnbelieverTerm = {
	type = character

	text = {
		trigger = {
			is_infidel_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_infidel
	}
	text = {
		trigger = {
			is_heathen_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_heathen
	}
	text = {
		trigger = {
			is_heretic_trigger = { WHO = scope:second TARGET = root}
		}
		localization_key = unbeliever_heretic
	}
	text = {
		trigger = { always = yes }
		localization_key = unbeliever_unbeliever
	}
}

#1.6
GetUnbelieverTermVocative = {
	parent = GetUnbelieverTerm
	suffix = "_vocative"
}

#1.9.0.2 - original
FavoriteTreatDemand = {
	type = character

	random_valid = yes

	text = {
		localization_key = treat_comfit
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:comfit
			}
		}
	}
	text = {
		localization_key = treat_roasted_almonds
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:roasted_almonds
			}
		}
	}
	text = {
		localization_key = treat_nougat
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:nougat
			}
		}
	}
	text = {
		localization_key = treat_marzipan
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:marzipan
			}
		}
	}
	text = {
		localization_key = treat_sweetrolls
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sweetroll
			}
		}
	}
	text = {
		localization_key = treat_poached_pears
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:poached_pear
			}
		}
	}
	text = {
		localization_key = treat_pudding
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:pudding
			}
		}
	}
	text = {
		localization_key = treat_apple_tart
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:apple_tart
			}
		}
	}
	text = {
		localization_key = treat_strawberry_compote
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:strawberry_compote
			}
		}
	}
	text = {
		localization_key = treat_gingerbread
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:gingerbread
			}
		}
	}
	text = {
		localization_key = treat_frytour_blaunched
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:frytour_blaunched
			}
		}
	}
	text = {
		localization_key = treat_fig_pie
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:fig_pie
			}
		}
	}
	text = {
		localization_key = treat_pokerounce
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:pokerounce
			}
		}
	}
	text = {
		localization_key = treat_sambocade
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sambocade
			}
		}
	}
	text = {
		localization_key = treat_sesame_cake
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:sesame_cake
			}
		}
	}
	text = {
		localization_key = treat_baked_banana
		trigger = {
			OR = {
				NOT = { has_variable = favorite_treat }
				var:favorite_treat = flag:baked_banana
			}
		}
	}
}

#1.7
FavoriteTreatDemandAccusative = {
	parent = FavoriteTreatDemand
	suffix = "_accusative"
}

#1.8.1 - original
ArtifactAnimalAdjective = {
	type = artifact
	random_valid = yes
	text = {
		localization_key = artifact_animal_adjective_great
	}
	text = {
		localization_key = artifact_animal_adjective_mighty
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_skull_type_aurochs
				has_artifact_feature = animal_hide_type_aurochs
				has_artifact_feature = animal_skull_type_boar
				has_artifact_feature = animal_hide_type_boar
				has_artifact_feature = animal_skull_type_stag
				has_artifact_feature = animal_hide_type_stag
				has_artifact_feature = animal_hide_type_fox
				has_artifact_feature = animal_hide_type_cat
				has_artifact_feature = animal_hide_type_hart
				has_artifact_feature = animal_skull_type_horse
			}
		}
		localization_key = artifact_animal_man_eating
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_hide_type_fox
				has_artifact_feature = animal_skull_type_stag
				has_artifact_feature = animal_hide_type_stag
				has_artifact_feature = animal_hide_type_hart
				has_artifact_feature = animal_skull_type_tiger
				has_artifact_feature = animal_hide_type_tiger
				has_artifact_feature = animal_hide_type_lynx
			}
		}
		localization_key = artifact_animal_black
	}
	text = {
		localization_key = artifact_animal_white
	}
	text = {
		localization_key = artifact_animal_cursed
	}
	text = {
		localization_key = artifact_animal_feral
	}
	text = {
		localization_key = artifact_animal_terrifying
	}
	text = {
		localization_key = artifact_animal_fearsome
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_hide_type_cat
				has_artifact_feature = animal_hide_type_dog
				has_artifact_feature = animal_skull_type_horse
				has_artifact_feature = animal_skull_type_rabbit
				has_artifact_feature = animal_hide_type_rabbit
			}
		}
		localization_key = artifact_animal_notorious
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_skull_type_aurochs
				has_artifact_feature = animal_hide_type_aurochs
				has_artifact_feature = animal_skull_type_boar
				has_artifact_feature = animal_hide_type_boar
				has_artifact_feature = animal_skull_type_stag
				has_artifact_feature = animal_hide_type_stag
				has_artifact_feature = animal_hide_type_fox
				has_artifact_feature = animal_hide_type_cat
				has_artifact_feature = animal_hide_type_hart
				has_artifact_feature = animal_skull_type_horse
				has_artifact_feature = animal_skull_type_rabbit
				has_artifact_feature = animal_hide_type_rabbit
			}
		}
		localization_key = artifact_animal_stalking
	}
	text = {
		localization_key = artifact_animal_fabled
	}
	text = {
		localization_key = artifact_animal_elusive
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_hide_type_cat
				has_artifact_feature = animal_hide_type_dog
				has_artifact_feature = animal_skull_type_horse
				has_artifact_feature = animal_skull_type_rabbit
				has_artifact_feature = animal_hide_type_rabbit
			}
		}
		localization_key = artifact_animal_ancient
	}
	text = {
		trigger = {
			NOR = {
				has_artifact_feature = animal_hide_type_cat
				has_artifact_feature = animal_hide_type_dog
				has_artifact_feature = animal_skull_type_horse
				has_artifact_feature = animal_skull_type_rabbit
				has_artifact_feature = animal_hide_type_rabbit
			}
		}
		localization_key = artifact_animal_renowned
	}
}

#1.8.1
ArtifactAnimalAdjectiveAccFem = {
	parent = ArtifactAnimalAdjective
	suffix = "_accusative_fem"
}

#1.8.1 - original
TrinketLookAdjective = {
	type = character
	random_valid = yes

	#Adorned
	text = {
		trigger = {
			exists = var:trinket_adjective_followup
			var:trinket_adjective_followup = flag:adorned
		}
		localization_key = trinket_look_adorned
	}
	#Decorated
	text = {
		trigger = {
			exists = var:trinket_adjective_followup
			var:trinket_adjective_followup = flag:decorated
		}
		localization_key = trinket_look_decorated
	}
	#Embellished
	text = {
		trigger = {
			exists = var:trinket_adjective_followup
			var:trinket_adjective_followup = flag:embellished
		}
		localization_key = trinket_look_embellished
	}
	#Ornamented
	text = {
		trigger = {
			exists = var:trinket_adjective_followup
			var:trinket_adjective_followup = flag:ornamented
		}
		localization_key = trinket_look_ornamented
	}
}

#1.8.1
TrinketLookAdjectiveMasc = {
	parent = TrinketLookAdjective
	suffix = "_masc"
}

#1.8.1 - original
ArtifactBookContentQuality  = {
	type = character

	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:book_content_quality
					scope:book_content_quality >= 80
				}
				AND = {
					exists = var:book_content_quality
					var:book_content_quality >= 80
				}
			}
		}
		localization_key = artifact_book_content_quality_excellent
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:book_content_quality
					scope:book_content_quality >= 60
					scope:book_content_quality < 80

				}
				AND = {
					exists = var:book_content_quality
					var:book_content_quality >= 60
					var:book_content_quality < 80
				}
			}
		}
		localization_key = artifact_book_content_quality_deep
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:book_content_quality
					scope:book_content_quality >= 40
					scope:book_content_quality < 60

				}
				AND = {
					exists = var:book_content_quality
					var:book_content_quality >= 40
					var:book_content_quality < 60
				}
			}
		}
		localization_key = artifact_book_content_quality_insightful
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:book_content_quality
					scope:book_content_quality >= 25
					scope:book_content_quality < 40

				}
				AND = {
					exists = var:book_content_quality
					var:book_content_quality >= 25
					var:book_content_quality < 40
				}
			}
		}
		localization_key = artifact_book_content_quality_adequate
	}
	text = {
		trigger = {
			OR = {
				AND = {
					exists = scope:book_content_quality
					scope:book_content_quality < 25
				}
				AND = {
					exists = var:book_content_quality
					var:book_content_quality < 25
				}
			}
		}
		localization_key = artifact_book_content_quality_modest
		fallback = yes
	}
}

#1.8.1
ArtifactBookContentQualityMasc = {
	parent = ArtifactBookContentQuality
	suffix = "_masc"
}

PL_ActivityStringBypass = {
	type = activity

	text = {
		fallback = yes
		localization_key = pl_activity_string_bypass
	}
}

PL_ActivityGenitiveStringBypass = {
	parent = PL_ActivityStringBypass
	suffix = "_genitive"
}

PL_ActivityAccusativeStringBypass = {
	parent = PL_ActivityStringBypass
	suffix = "_accusative"
}

PL_ActivityLocativeStringBypass = {
	parent = PL_ActivityStringBypass
	suffix = "_locative"
}

#1.10.2 - original
get_region_flower_type = {
	type = province
	random_valid = yes

	text = {
		trigger = {
			OR = {
				geographical_region = world_india
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_africa_west
				geographical_region = world_africa_east
			}
		}
		localization_key = flower_type_hibiscus # Hibiscus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_india
				geographical_region = world_africa_west
				geographical_region = world_africa_east
			}
		}
		localization_key = flower_type_gardenia # Gardenia
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_steppe_east
				geographical_region = world_steppe_tarim
				geographical_region = world_himalaya
				geographical_region = world_india
			}
		}
		localization_key = flower_type_lotus # Lotus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_steppe_east
				geographical_region = world_steppe_tarim
				geographical_region = world_himalaya
				geographical_region = world_india
			}
		}
		localization_key = flower_type_chrysanthemum # Chrysanthemum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_india
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe_west
			}
		}
		localization_key = flower_type_jasmine # Jasmine
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe
				geographical_region = world_africa
			}
		}
		localization_key = flower_type_delphinium # Delphinium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe_west
			}
		}
		localization_key = flower_type_violet # Violet/Pansy
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe_west
			}
		}
		localization_key = flower_type_peony # Peony
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_lavender # Lavender
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe
				geographical_region = world_india
			}
		}
		localization_key = flower_type_lily # Lily
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_geranium # Geranium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_iris # Iris
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_asia_minor
				geographical_region = world_steppe_west
				geographical_region = world_africa_north
			}
		}
		localization_key = flower_type_foxglove # Foxglove/Digitalis
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe_south
				geographical_region = world_africa_north
			}
		}
		localization_key = flower_type_carnation # Carnation/Dianthus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe_south
				geographical_region = world_africa_north
			}
		}
		localization_key = flower_type_snapdragon # Snapdragon/Antirrhinum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe
				geographical_region = world_africa_north
				geographical_region = world_asia_minor
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_narcissus # Narcissus/Daffodil
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe_south
				geographical_region = world_africa_north
				geographical_region = world_asia_minor
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_crocus # Crocus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_asia_minor
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_steppe_west
			}
		}
		localization_key = flower_type_tulip # Tulip
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_europe_south
				geographical_region = world_africa_north
				geographical_region = world_asia_minor
				geographical_region = world_middle_east
				geographical_region = world_middle_east_persia
				geographical_region = world_steppe
			}
		}
		localization_key = flower_type_poppy # Poppy
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_rose # Rose
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_orchid # Orchid
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_aster # Aster/Daisy
	}
}

get_region_flower_type_gen = {
	parent = get_region_flower_type
	suffix = "_gen"
}

PL_Ruler_Government_Genitive = {
	type = character

	text = {
		trigger = {
			has_government = feudal_government
		}
		localization_key = pl_feudal_ruler_gen
	}

	text = {
		trigger = {
			has_government = clan_government
		}
		localization_key = pl_clan_ruler_gen
	}

	text = {
		trigger = {
			has_government = tribal_government
		}
		localization_key = pl_tribal_ruler_gen
	}

	text = {
		trigger = {
			has_government = theocracy_government
		}
		localization_key = pl_theocracy_ruler_gen
	}

	text = {
		trigger = {
			has_government = republic_government
		}
		localization_key = pl_republic_ruler_gen
	}

	text = {
		fallback = yes
		localization_key = pl_fallback_ruler_gen
	}

}

#1.11.1 - original
ArtifactBaseWeaponType = {
	type = artifact

	text = { #
		trigger = { artifact_type = axe }
		localization_key = weapon_axe_inspiration_name
	}
	text = {
		trigger = { artifact_type = hammer }
		localization_key = weapon_hammer_inspiration_name
	}
	text = {
		trigger = { artifact_type = mace }
		localization_key = weapon_mace_inspiration_name
	}
	text = {
		trigger = { artifact_type = spear }
		localization_key = weapon_spear_inspiration_name
	}
	text = {
		trigger = { artifact_type = dagger }
		localization_key = weapon_dagger_inspiration_name
	}
	text = {
		trigger = { artifact_type = sword }
		fallback = yes
		localization_key = weapon_sword_inspiration_name
	}
}

PL_ArtifactBaseWeaponTypeNom = {
	parent = ArtifactBaseWeaponType
	suffix = "_nom"
}

#1.11
GetLegendaryColor = {
	type = all

	text = {
		trigger = {
			exists = var:animal_type
			var:animal_type ?= flag:leopard
		}
		localization_key = fur_color_black
	}
	text = {
		trigger = {
			exists = var:animal_type
			NOT = { var:animal_type ?= flag:leopard }
		}
		localization_key = fur_color_white
		fallback = yes
	}
}

GetLegendaryColorOdm = {
	parent = GetLegendaryColor
	suffix = "_odm"
}

PL_GetDiarchTitle = {
	type = character

	text = {
		trigger = {
			has_diarchy_type = vizierate 
		}
		localization_key = pl_diarch_vizier
	}

	text = {
		trigger = {
			OR = {
				has_diarchy_type = regency
				has_diarchy_type = temporary_regency
				# has_diarchy_type = entrenched_regency
			}
		}
		localization_key = pl_diarch_regent
	}

	text = {
		fallback = yes
		localization_key = pl_diarch_fallback
	}

}

PL_GetDiarchTitleInstrumental = {
	parent = PL_GetDiarchTitle
	suffix = "_instrumental"
}